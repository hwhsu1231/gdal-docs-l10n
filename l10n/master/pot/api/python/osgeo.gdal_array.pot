# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1998-2024
# This file is distributed under the same license as the GDAL package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GDAL master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-04-22 19:33+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../source/api/python/osgeo.gdal_array.rst:2
msgid "osgeo.gdal\\_array module"
msgstr ""

#: ../../../../../../.venv/lib/python3.10/site-packages/osgeo/gdal_array.py:docstring
#: of osgeo.gdal_array.BandReadAsArray:1
msgid ""
"Pure python implementation of reading a chunk of a GDAL file into a numpy "
"array.  Used by the gdal.Band.ReadAsArray method."
msgstr ""

#: ../../../../../../.venv/lib/python3.10/site-packages/osgeo/gdal_array.py:docstring
#: of osgeo.gdal_array.BandWriteArray:1
msgid ""
"Pure python implementation of writing a chunk of a GDAL file from a numpy "
"array.  Used by the gdal.Band.WriteArray method."
msgstr ""

#: ../../../../../../.venv/lib/python3.10/site-packages/osgeo/gdal_array.py:docstring
#: of osgeo.gdal_array.CopyDatasetInfo:1
msgid ""
"Copy georeferencing information and metadata from one dataset to another. "
"src: input dataset dst: output dataset - It can be a ROI - xoff, yoff:  "
"dst's offset with respect to src in pixel/line."
msgstr ""

#: ../../../../../../.venv/lib/python3.10/site-packages/osgeo/gdal_array.py:docstring
#: of osgeo.gdal_array.CopyDatasetInfo:6
msgid "Notes: Destination dataset must have update access.  Certain formats"
msgstr ""

#: ../../../../../../.venv/lib/python3.10/site-packages/osgeo/gdal_array.py:docstring
#: of osgeo.gdal_array.CopyDatasetInfo:7
msgid "do not support creation of geotransforms and/or gcps."
msgstr ""

#: ../../../../../../.venv/lib/python3.10/site-packages/osgeo/gdal_array.py:docstring
#: of osgeo.gdal_array.DatasetReadAsArray:1
msgid ""
"Pure python implementation of reading a chunk of a GDAL file into a numpy "
"array.  Used by the gdal.Dataset.ReadAsArray method."
msgstr ""

#: ../../../../../../.venv/lib/python3.10/site-packages/osgeo/gdal_array.py:docstring
#: of osgeo.gdal_array.DatasetWriteArray:1
msgid ""
"Pure python implementation of writing a chunk of a GDAL file from a numpy "
"array.  Used by the gdal.Dataset.WriteArray method."
msgstr ""

#: ../../../../../../.venv/lib/python3.10/site-packages/osgeo/gdal_array.py:docstring
#: of osgeo.gdal_array.DontUseExceptions:1
msgid ""
"Disable exceptions in all GDAL related modules (osgeo.gdal, osgeo.ogr, osgeo."
"osr, osgeo.gnm). Note: prior to GDAL 3.7, this only affected the calling "
"module"
msgstr ""

#: ../../../../../../.venv/lib/python3.10/site-packages/osgeo/gdal_array.py:docstring
#: of osgeo.gdal_array.ExceptionMgr:1 osgeo.gdal_array.VirtualMem:1
msgid "Bases: :py:class:`object`"
msgstr ""

#: ../../../../../../.venv/lib/python3.10/site-packages/osgeo/gdal_array.py:docstring
#: of osgeo.gdal_array.ExceptionMgr:1
msgid "Context manager to manage Python Exception state for GDAL/OGR/OSR/GNM."
msgstr ""

#: ../../../../../../.venv/lib/python3.10/site-packages/osgeo/gdal_array.py:docstring
#: of osgeo.gdal_array.ExceptionMgr:4
msgid ""
"Separate exception state is maintained for each module (gdal, ogr, etc), and "
"this class appears independently in all of them. This is built in top of "
"calls to the older UseExceptions()/DontUseExceptions() functions."
msgstr ""

#: ../../../../../../.venv/lib/python3.10/site-packages/osgeo/gdal_array.py:docstring
#: of osgeo.gdal_array.ExceptionMgr:9
msgid "Example::"
msgstr ""

#: ../../../../../../.venv/lib/python3.10/site-packages/osgeo/gdal_array.py:docstring
#: of osgeo.gdal_array.ExceptionMgr:11
msgid ""
">>> print(gdal.GetUseExceptions())\n"
"0\n"
">>> with gdal.ExceptionMgr():\n"
"...     # Exceptions are now in use\n"
"...     print(gdal.GetUseExceptions())\n"
"1\n"
">>>\n"
">>> # Exception state has now been restored\n"
">>> print(gdal.GetUseExceptions())\n"
"0"
msgstr ""

#: ../../../../../../.venv/lib/python3.10/site-packages/osgeo/gdal_array.py:docstring
#: of osgeo.gdal_array.RATReadArray:1
msgid ""
"Pure Python implementation of reading a chunk of the RAT into a numpy array. "
"Called from RasterAttributeTable.ReadAsArray"
msgstr ""

#: ../../../../../../.venv/lib/python3.10/site-packages/osgeo/gdal_array.py:docstring
#: of osgeo.gdal_array.RATWriteArray:1
msgid ""
"Pure Python implementation of writing a chunk of the RAT from a numpy array. "
"Type of array is coerced to one of the types (int, double, string) "
"supported. Called from RasterAttributeTable.WriteArray"
msgstr ""

#: ../../../../../../.venv/lib/python3.10/site-packages/osgeo/gdal_array.py:docstring
#: of osgeo.gdal_array.UseExceptions:1
msgid ""
"Enable exceptions in all GDAL related modules (osgeo.gdal, osgeo.ogr, osgeo."
"osr, osgeo.gnm). Note: prior to GDAL 3.7, this only affected the calling "
"module"
msgstr ""

#: ../../../../../../.venv/lib/python3.10/site-packages/osgeo/gdal_array.py:docstring
#: of osgeo.gdal_array.VirtualMem:1
msgid "Proxy of C++ CPLVirtualMemShadow class."
msgstr ""

#: ../../../../../../.venv/lib/python3.10/site-packages/osgeo/gdal_array.py:docstring
#: of osgeo.gdal_array.VirtualMem.thisown:1
msgid "The membership flag"
msgstr ""
