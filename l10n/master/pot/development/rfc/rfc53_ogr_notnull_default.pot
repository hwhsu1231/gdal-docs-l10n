# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1998-2024
# This file is distributed under the same license as the GDAL package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GDAL master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-04-22 19:28+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:5
msgid "RFC 53: OGR not-null constraints and default values"
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:7
msgid "Authors: Even Rouault"
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:9
msgid "Contact: even dot rouault at spatialys.com"
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:11
msgid "Status: Adopted, implemented in GDAL 2.0"
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:14
msgid "Summary"
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:16
msgid ""
"This RFC addresses handling of NOT NULL constraints and DEFAULT values for "
"OGR fields. NOT NULL constraints are useful to maintain basic data integrity "
"and are handled by most (all?) drivers that have SQL capabilities. Default "
"fields values may be used complementary or independently of NOT NULL "
"constraints to specify the value a field must be assigned to if it is not "
"provided when inserting a feature into the layer."
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:25
msgid "NOT NULL constraint"
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:27
msgid ""
"Up to now, OGR fields did not have NOT NULL constraints, i.e. fields in "
"layers/tables were created with the possibility for a field of a feature/"
"record to be unset (i.e. having a NULL value). This will still be the "
"default, i.e. fields are assumed to be nullable. The OGRFieldDefn class is "
"extended with a boolean attribute bNullable that defaults to TRUE and can be "
"set to FALSE to express a NOT NULL constraint (bNullable has been preferred "
"over bNotNullable to avoid confusion with double negation). Drivers that can "
"translate NOT NULL constraints in their storage will use that attribute to "
"determine if the field definition must include a NOT NULL constraint. When "
"opening a datasource, their metadata will be inspected to set the nullable "
"attribute properly, so that round-tripping works."
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:40
msgid "The following methods are added to the OGRFieldDefn class"
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:44
msgid ""
"    int                 IsNullable() const { return bNullable; }\n"
"\n"
"/**\n"
" * \\brief Return whether this field can receive null values.\n"
" *\n"
" * By default, fields are nullable.\n"
" *\n"
" * Even if this method returns FALSE (i.e not-nullable field), it doesn't "
"mean\n"
" * that OGRFeature::IsFieldSet() will necessary return TRUE, as fields can "
"be\n"
" * temporary unset and null/not-null validation is usually done when\n"
" * OGRLayer::CreateFeature()/SetFeature() is called.\n"
" *\n"
" * This method is the same as the C function OGR_Fld_IsNullable().\n"
" *\n"
" * @return TRUE if the field is authorized to be null.\n"
" * @since GDAL 2.0\n"
" */\n"
"\n"
"    void                SetNullable( int bNullableIn ) { bNullable = "
"bNullableIn; }\n"
"\n"
"/**\n"
" * \\brief Set whether this field can receive null values.\n"
" *\n"
" * By default, fields are nullable, so this method is generally called with "
"FALSE\n"
" * to set a not-null constraint.\n"
" *\n"
" * Drivers that support writing not-null constraint will advertise the\n"
" * GDAL_DCAP_NOTNULL_FIELDS driver metadata item.\n"
" *\n"
" * This method is the same as the C function OGR_Fld_SetNullable().\n"
" *\n"
" * @param bNullableIn FALSE if the field must have a not-null constraint.\n"
" * @since GDAL 2.0\n"
" */"
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:79
msgid ""
"As this holds true for geometry fields, those 2 methods are also add to the "
"OGRGeometryFieldDefn class."
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:82
msgid ""
"Note that adding a field with a NOT NULL constraint on a non-empty layer is "
"generally impossible, unless a DEFAULT value is associated with it."
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:85
#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:292
msgid "The following method is added to the OGRFeature class :"
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:89
msgid ""
"    int                 Validate( int nValidateFlags, int bEmitError );\n"
"\n"
"/**\n"
" * \\brief Validate that a feature meets constraints of its schema.\n"
" *\n"
" * The scope of test is specified with the nValidateFlags parameter.\n"
" *\n"
" * Regarding OGR_F_VAL_WIDTH, the test is done assuming the string width "
"must\n"
" * be interpreted as the number of UTF-8 characters. Some drivers might "
"interpret\n"
" * the width as the number of bytes instead. So this test is rather "
"conservative\n"
" * (if it fails, then it will fail for all interpretations).\n"
" *\n"
" * This method is the same as the C function OGR_F_Validate().\n"
" *\n"
" * @param nValidateFlags OGR_F_VAL_ALL or combination of OGR_F_VAL_NULL,\n"
" *                       OGR_F_VAL_GEOM_TYPE, OGR_F_VAL_WIDTH and "
"OGR_F_VAL_ALLOW_NULL_WHEN_DEFAULT\n"
" *                       with '|' operator\n"
" * @param bEmitError TRUE if a CPLError() must be emitted when a check "
"fails\n"
" * @return TRUE if all enabled validation tests pass.\n"
" * @since GDAL 2.0\n"
" */"
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:111
msgid "where nValidateFlags is a combination of :"
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:115
msgid ""
"/** Validate that fields respect not-null constraints.\n"
" * Used by OGR_F_Validate().\n"
" * @since GDAL 2.0\n"
" */\n"
"#define OGR_F_VAL_NULL           0x00000001\n"
"\n"
"/** Validate that geometries respect geometry column type.\n"
" * Used by OGR_F_Validate().\n"
" * @since GDAL 2.0\n"
" */\n"
"#define OGR_F_VAL_GEOM_TYPE      0x00000002\n"
"\n"
"/** Validate that (string) fields respect field width.\n"
" * Used by OGR_F_Validate().\n"
" * @since GDAL 2.0\n"
" */\n"
"#define OGR_F_VAL_WIDTH          0x00000004\n"
"\n"
"/** Allow fields that are null when there's an associated default value.\n"
" * This can be used for drivers where the low-level layers will "
"automatically set the\n"
" * field value to the associated default value.\n"
" * This flag only makes sense if OGR_F_VAL_NULL is set too.\n"
" * Used by OGR_F_Validate().\n"
" * @since GDAL 2.0\n"
" */\n"
"#define OGR_F_VAL_ALLOW_NULL_WHEN_DEFAULT       0x00000008\n"
"\n"
"/** Enable all validation tests.\n"
" * Used by OGR_F_Validate().\n"
" * @since GDAL 2.0\n"
" */\n"
"#define OGR_F_VAL_ALL            0xFFFFFFFF"
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:148
msgid ""
"Validation of NOT NULL constraints is generally let to the driver low-level "
"layer, so OGRFeature::Validate() is only useful on a few cases (one of such "
"case is the GML driver)"
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:152
msgid ""
"A new flag ALTER_NULLABLE_FLAG = 0x8 is added to be passed to OGRLayer::"
"AlterFieldDefn() so as to set or drop NULL / NOT-NULL constraints (for "
"drivers that implement it)."
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:156
msgid ""
"Drivers that handle NOT NULL constraint for regular attribute fields should "
"advertise the new GDAL_DCAP_NOTNULL_FIELDS and/or "
"GDAL_DCAP_NOTNULL_GEOMFIELDS driver metadata items."
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:160
msgid ""
"Drivers that do not implement the OGRLayer::CreateGeomField() interface (i."
"e. the ones that support single geometry field), but can create a layer with "
"a NOT NULL constraint on the geometry field can expose a "
"GEOMETRY_NULLABLE=YES/NO layer creation option."
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:165
msgid ""
"Note: due to the way they are commonly written, the CreateField() "
"implementations of drivers that do not support NOT NULL constraint will "
"generally copy the value of the nullable flag, which may be a bit misleading "
"if querying the field definition just after having adding it (the same holds "
"true for width/precision as well)."
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:171
#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:328
msgid "All above methods are mapped into the C API :"
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:175
msgid ""
"  int    CPL_DLL OGR_Fld_IsNullable( OGRFieldDefnH hDefn );\n"
"  void   CPL_DLL OGR_Fld_SetNullable( OGRFieldDefnH hDefn, int );\n"
"\n"
"int                  CPL_DLL OGR_GFld_IsNullable( OGRGeomFieldDefnH "
"hDefn );\n"
"void                 CPL_DLL OGR_GFld_SetNullable( OGRGeomFieldDefnH hDefn, "
"int );\n"
"\n"
"int    CPL_DLL OGR_F_Validate( OGRFeatureH, int nValidateFlags, int "
"bEmitError );"
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:184
msgid "Default field values"
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:186
msgid ""
"Fields with NOT NULL constraints are sometimes accompanied with a DEFAULT "
"clause so as to be able to create a new feature without filling all fields, "
"while maintaining integrity. DEFAULT values can also be set on nullable "
"fields but for reasons exposed later it is recommended to avoid that."
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:192
msgid ""
"Drivers that can translate DEFAULT values in their storage will use that "
"attribute to determine if the field definition must include a DEFAULT value. "
"When opening a datasource, their metadata will be inspected to set the "
"default value attribute properly, so that round-tripping works."
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:197
msgid ""
"There was an embryonic support for default values in GDAL 1.X but that never "
"got implemented beyond the getter/setter methods on OGRFieldDefn. It relied "
"on a \"OGRField uDefault\" member. The choice of OGRField restricts the "
"default values to be expressed with the type of the field, but in some "
"situations we want to be able to assign expressions or special keywords for "
"non-string fields. For example the SQL standard defines CURRENT_TIMESTAMP "
"for DateTime fields. So as to be general, we have remove this uDefault "
"member and replaced it with a \"char\\* pszDefault\" string."
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:207
msgid "The values that can be set as default values are :"
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:209
msgid ""
"literal string values enclosed in single-quote characters and properly "
"escaped like: ``'Nice weather. Isn''t it ?'``"
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:211
msgid "numeric values (unquoted)"
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:212
msgid ""
"reserved keywords (unquoted): CURRENT_TIMESTAMP, CURRENT_DATE, CURRENT_TIME, "
"NULL"
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:214
msgid ""
"datetime literal values enclosed in single-quote characters with the "
"following defined format: 'YYYY/MM/DD HH:MM:SS[.sss]'"
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:216
msgid ""
"any other driver specific expression. e.g. for SQLite: (strftime('%Y-%m-"
"%dT%H:%M:%fZ','now'))"
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:219
msgid "The following methods are added/modified to the OGRFieldDefn class"
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:223
msgid ""
"    void                SetDefault( const char* );\n"
"\n"
"/**\n"
" * \\brief Set default field value.\n"
" *\n"
" * The default field value is taken into account by drivers (generally those "
"with\n"
" * a SQL interface) that support it at field creation time. OGR will "
"generally not\n"
" * automatically set the default field value to null fields by itself when "
"calling\n"
" * OGRFeature::CreateFeature() / OGRFeature::SetFeature(), but will let the\n"
" * low-level layers to do the job. So retrieving the feature from the layer "
"is\n"
" * recommended.\n"
" *\n"
" * The accepted values are NULL, a numeric value, a literal value enclosed\n"
" * between single quote characters (and inner single quote characters "
"escaped by\n"
" * repetition of the single quote character),\n"
" * CURRENT_TIMESTAMP, CURRENT_TIME, CURRENT_DATE or\n"
" * a driver specific expression (that might be ignored by other drivers).\n"
" * For a datetime literal value, format should be 'YYYY/MM/DD HH:MM:SS[."
"sss]'\n"
" * (considered as UTC time).\n"
" *\n"
" * Drivers that support writing DEFAULT clauses will advertise the\n"
" * GDAL_DCAP_DEFAULT_FIELDS driver metadata item.\n"
" *\n"
" * This function is the same as the C function OGR_Fld_SetDefault().\n"
" *\n"
" * @param pszDefault new default field value or NULL pointer.\n"
" *\n"
" * @since GDAL 2.0\n"
" */\n"
"\n"
"\n"
"    const char         *GetDefault() const;\n"
"\n"
"/**\n"
" * \\brief Get default field value.\n"
" *\n"
" * This function is the same as the C function OGR_Fld_GetDefault().\n"
" *\n"
" * @return default field value or NULL.\n"
" * @since GDAL 2.0\n"
" */\n"
"\n"
"\n"
"    int                 IsDefaultDriverSpecific() const;\n"
"\n"
"/**\n"
" * \\brief Returns whether the default value is driver specific.\n"
" *\n"
" * Driver specific default values are those that are *not* NULL, a numeric "
"value,\n"
" * a literal value enclosed between single quote characters, "
"CURRENT_TIMESTAMP,\n"
" * CURRENT_TIME, CURRENT_DATE or datetime literal value.\n"
" *\n"
" * This method is the same as the C function "
"OGR_Fld_IsDefaultDriverSpecific().\n"
" *\n"
" * @return TRUE if the default value is driver specific.\n"
" * @since GDAL 2.0\n"
" */"
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:281
msgid ""
"SetDefault() validates that a string literal beginning with ' is properly "
"escaped."
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:284
msgid ""
"IsDefaultDriverSpecific() returns TRUE if the value set does not belong to "
"one of the 4 bullets in the above enumeration. This is used by drivers to "
"determine if they can handle or not a default value."
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:288
msgid ""
"Drivers should do some effort to interpret and reformat default values in "
"the above 4 standard formats so as to be able to propagate default values "
"from one driver to another one."
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:296
msgid ""
"    void                FillUnsetWithDefault(int bNotNullableOnly,\n"
"                                             char** papszOptions );\n"
"/**\n"
" * \\brief Fill unset fields with default values that might be defined.\n"
" *\n"
" * This method is the same as the C function OGR_F_FillUnsetWithDefault().\n"
" *\n"
" * @param bNotNullableOnly if we should fill only unset fields with a not-"
"null\n"
" *                     constraint.\n"
" * @param papszOptions unused currently. Must be set to NULL.\n"
" * @since GDAL 2.0\n"
" */"
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:309
msgid ""
"It will replace unset fields of a feature with their default values, but "
"should rarely be used as most drivers will do that substitution "
"automatically in their low-level layer. CreateFeature() cannot be trusted to "
"automatically modify the passed OGRFeature object to set unset fields to "
"their default values. For that, an explicit GetFeature() call should be "
"issued to retrieve the record as stored in the database."
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:316
msgid ""
"A new flag ALTER_DEFAULT_FLAG = 0x8 is added to be passed to OGRLayer::"
"AlterFieldDefn() so as to set, drop or modify default values (for drivers "
"that implement it)"
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:320
msgid ""
"Drivers that handle default values should advertise the new "
"GDAL_DCAP_DEFAULT_FIELDS driver metadata items."
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:323
msgid ""
"Note: due to the way they are commonly written, the CreateField() "
"implementations of drivers that do not support default values will generally "
"copy the value of the default value string, which may be a bit misleading if "
"querying the field definition just after having adding it."
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:332
msgid ""
"const char CPL_DLL *OGR_Fld_GetDefault( OGRFieldDefnH hDefn );\n"
"void   CPL_DLL OGR_Fld_SetDefault( OGRFieldDefnH hDefn, const char* );\n"
"int    CPL_DLL OGR_Fld_IsDefaultDriverSpecific( OGRFieldDefnH hDefn );\n"
"\n"
"void   CPL_DLL OGR_F_FillUnsetWithDefault( OGRFeatureH hFeat,\n"
"                                           int bNotNullableOnly,\n"
"                                           char** papszOptions );"
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:341
msgid "SWIG bindings (Python / Java / C# / Perl) changes"
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:343
msgid "The following additions have been done :"
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:345
msgid "SetNullable(), IsNullable() added on FieldDefn class"
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:346
msgid "SetNullable(), IsNullable() added on GeomFieldDefn class"
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:347
msgid "Validate() added on Feature class"
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:348
msgid ""
"SetDefault(), GetDefault(), IsDefaultDriverSpecific() available on FieldDefn "
"class"
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:350
msgid "FillUnsetWithDefault() added on Feature class"
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:353
msgid "Utilities"
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:355
msgid ""
"ogrinfo has been updated to expose NOT NULL constraints and DEFAULT values. "
"e.g."
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:360
msgid ""
"Geometry Column 1 NOT NULL = WKT\n"
"Geometry Column 2 NOT NULL = geom2\n"
"id: Integer (0.0) NOT NULL DEFAULT 1234567\n"
"dbl: Real (0.0) NOT NULL DEFAULT 1.456\n"
"str: String (0.0) NOT NULL DEFAULT 'a'\n"
"d: Date (0.0) NOT NULL DEFAULT CURRENT_DATE\n"
"t: Time (0.0) NOT NULL DEFAULT CURRENT_TIME\n"
"dt: DateTime (0.0) NOT NULL DEFAULT CURRENT_TIMESTAMP\n"
"dt2: DateTime (0.0) NOT NULL DEFAULT '2013/12/11 01:23:45'"
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:370
msgid "2 news options have been added to ogr2ogr :"
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:372
msgid ""
"-forceNullable to remove NOT NULL constraint (NOT NULL constraints are "
"propagated by default from source to target layer)"
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:374
msgid ""
"-unsetDefault to remove DEFAULT values (DEFAULT values are propagated by "
"default from source to target layer)"
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:377
msgid ""
"Unless it is explicitly specified, ogr2ogr will also automatically set the "
"GEOMETRY_NULLABLE=NO creation option to target layers that support it, if "
"the source layer has its first geometry field with a NOT NULL constraint."
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:383
msgid "Documentation"
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:385
msgid "New/modified API are documented."
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:388
msgid "File Formats"
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:390
msgid ""
"The following OGR drivers have been updated to support the new interfaces."
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:393
msgid ""
"PG: supports NOT NULL (for attribute and multiple geometry fields) and "
"DEFAULT on creation/read. AlterFieldDefn() implementation modified to "
"support ALTER_NULLABLE_FLAG and ALTER_DEFAULT_FLAG."
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:396
msgid ""
"PGDump: supports NOT NULL (for attribute and multiple geometry fields) and "
"DEFAULT on creation."
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:398
msgid ""
"CartoDB: supports NOT NULL (for attribute and single geometry fields) and "
"DEFAULT on creation. Supported also on read with authenticated login only "
"(relies on queries on PostgreSQL system tables)"
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:401
msgid ""
"GPKG: supports NOT NULL (for attribute and its single geometry field) and "
"DEFAULT on creation/read. GEOMETRY_NULLABLE layer creation added."
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:403
msgid ""
"SQLite: supports NOT NULL (for attribute and multiple geometry fields. "
"Support for multiple geometry fields has been added recently per #5494) and "
"DEFAULT on creation/read. AlterFieldDefn() implementation modified to "
"support ALTER_NULLABLE_FLAG and ALTER_DEFAULT_FLAG."
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:408
msgid ""
"MySQL: supports NOT NULL (for attribute fields only) and DEFAULT on creation/"
"read."
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:410
msgid ""
"OCI: supports NOT NULL (for attribute and its single geometry field) and "
"DEFAULT on creation/read. GEOMETRY_NULLABLE layer creation added."
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:412
msgid ""
"VRT: supports NOT NULL (for attribute and multiple geometry fields) and "
"DEFAULT on read, through new attributes \"nullable\" and \"default\" (driver "
"documentation and data/ogrvrt.xsd updated)"
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:415
msgid ""
"GML: supports NOT NULL (for attribute and multiple geometry field) on "
"creation/read. DEFAULT not truly supported (no way to express it in .xsd "
"AFAIK), but on creation, unset fields with a NOT NULL constraint and DEFAULT "
"values will be filled by using FillUnsetWithDefault() so as to generate "
"valid XML."
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:420
msgid "WFS: supports NOT NULL (for attribute fields only) on read"
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:421
msgid ""
"FileGDB: supports NOT NULL (for attribute and its single geometry field) on "
"read/write. GEOMETRY_NULLABLE layer creation added. DEFAULT supported for "
"String,Integer and Real fieds on creation/read (with some bugs/weird "
"behavior seen in FileGDB SDK and E$RI tools, workarounded by using the "
"OpenFileGDB driver in problematic cases...). DEFAULT supported for DateTime "
"on read, but unsupported on creation to bug in FileGDB SDK."
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:428
msgid ""
"OpenFileGDB: supports NOT NULL (for attribute and its single geometry field) "
"and DEFAULT on read"
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:431
msgid ""
"MSSQLSpatial could probably support NOT NULL / DEFAULT, but has not been "
"updated as part of this work."
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:435
msgid "Test Suite"
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:437
msgid "The test suite is extended to test:"
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:439
msgid ""
"all new methods of OGRFieldDefn, OGRGeomFieldDefn and OGRFeature in "
"ogr_feature.py"
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:441
msgid ""
"updated drivers: PG, PGDump, CartoDB, GPKG, SQLite, MySQL, OCI, VRT, GML, "
"FileGDB, OpenFileGDB"
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:443
msgid ""
"new options of ogr2ogr, and default behavior with NOT NULL / DEFAULT "
"propagation"
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:447
msgid "Compatibility Issues"
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:449
msgid "This RFC should cause few compatibility issues."
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:451
msgid ""
"Regarding API, the existing OGRFieldDefn::SetDefault() has been changed and "
"GetDefaultRef() has been removed. Impact should be low as this wasn't used "
"in any drivers, was documented as being prone to be removed in the future, "
"and so was unlikely to be used in applications either (there was no C "
"binding)"
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:457
msgid ""
"When not using the new API, behavior should remain unchanged w.r.t GDAL 1.X "
"when operating on layers created by GDAL. If reading layers created by other "
"tools, then NOT NULL and/or DEFAULT can be read, and propagated. We cannot "
"exclude that propagation of NOT NULL / DEFAULT can cause problems in some "
"situations. In which case the new options of ogr2ogr will revert to a "
"behavior that was the one of the GDAL 1.X era."
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:465
msgid "Related topics out of scope of this RFC"
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:467
msgid ""
"There might be an ambiguity between a field that has not been set and a "
"field that is set to NULL. Both concepts are not distinguished in OGR "
"currently, but most RDBMS are able to make such a distinction."
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:471
msgid "Consider the 2 following statements :"
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:475
msgid ""
"INSERT INTO mytable (COL1) VALUES (5)\n"
"INSERT INTO mytable (COL1, COL2) VALUES (5, NULL)"
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:478
msgid "They are not equivalent when COL2 has a default value."
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:480
msgid ""
"The behavior of the modified drivers by this RFC is to *NOT* emit NULL at "
"CreateFeature() time when a field is unset, so that the low-level layer of "
"the driver can replace it with its default value if it exists. This is "
"generally the wished behavior."
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:485
msgid ""
"If explicit NULL insertion is wanted, then using SetFeature() afterwards "
"might be needed, if supported by the drivers (some drivers will likely not "
"force unset OGR fields to be NULL when composing an UPDATE statement), "
"otherwise with a direct SQL UPDATE statement."
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:490
msgid ""
"In fact, this confusion between unset or NULL hurts only in the case of "
"fields that are nullable and have a DEFAULT value. If making sure to always "
"associate DEFAULT with NOT NULL, then it becomes a non-issue as the database "
"would refuse explicit NULL values."
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:495
msgid ""
"Solving the confusion would require to add a new state to an instantiated "
"field within a feature to distinguish explicit NULL from unset, but this "
"would have deep impact in drivers and application code."
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:500
msgid "Implementation"
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:502
msgid ""
"Implementation will be done by Even Rouault (`Spatialys <http://spatialys."
"com>`__), and sponsored by `LINZ (Land Information New Zealand) <http://www."
"linz.govt.nz/>`__."
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:506
msgid ""
"The proposed implementation lies in the \"rfc53_ogr_notnull_default\" branch "
"of the `https://github.com/rouault/gdal2/tree/rfc53_ogr_notnull_default "
"<https://github.com/rouault/gdal2/tree/rfc53_ogr_notnull_default>`__ "
"repository."
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:511
msgid ""
"The list of changes : `https://github.com/rouault/gdal2/compare/"
"rfc53_ogr_notnull_default <https://github.com/rouault/gdal2/compare/"
"rfc53_ogr_notnull_default>`__"
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:515
msgid "Voting history"
msgstr ""

#: ../../../source/development/rfc/rfc53_ogr_notnull_default.rst:517
msgid "+1 from JukkaR, DanielM and EvenR"
msgstr ""
