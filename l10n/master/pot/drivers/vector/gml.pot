# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1998-2024
# This file is distributed under the same license as the GDAL package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GDAL master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-04-22 19:28+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../source/drivers/vector/gml.rst:4
msgid "GML - Geography Markup Language"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:-1
msgid "Driver short name"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:6
msgid "GML"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:-1
msgid "Build dependencies"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:8
msgid "(read support needs Xerces or libexpat)"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:10
msgid ""
"OGR has limited support for GML reading and writing. Update of existing "
"files is not supported."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:13
msgid "Supported GML flavors :"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:16
msgid "Read"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:16
msgid "Write"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:18
msgid "GML2 and GML3 that can"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:18
msgid "GML 2.1.2 or GML 3 SF-0"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:19
msgid "be translated into simple feature model"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:19
msgid "(GML 3.1.1 Compliance level SF-0)"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:22
msgid ""
"Starting with GDAL 2.2, another driver, :ref:`GMLAS <vector.gmlas>`, for GML "
"driven by application schemas, is also available. Both GML and GMLAS drivers "
"have their use cases."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:27
msgid "Driver capabilities"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:36
msgid "Configuration options"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:38
msgid ""
"The following :ref:`configuration options <configoptions>` are available:"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:120
msgid "Parsers"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:122
msgid ""
"The reading part of the driver only works if OGR is built with Xerces linked "
"in. When Xerces is unavailable, read support also works if OGR is built with "
"Expat linked in. XML validation is disabled by default. GML writing is "
"always supported, even without Xerces or Expat."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:128
msgid ""
"Note: if both Xerces and Expat are available at build time, the GML driver "
"will preferentially select at runtime the Expat parser for cases where it is "
"possible (GML file in a compatible encoding), and default back to Xerces "
"parser in other cases. However, the choice of the parser can be overridden "
"by specifying the :config:`GML_PARSER` configuration option to **EXPAT** or "
"**XERCES**."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:136
msgid "CRS support"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:138
msgid ""
"The GML driver has coordinate system support. This is only reported when all "
"the geometries of a layer have a srsName attribute, whose value is the same "
"for all geometries. For srsName such as \"urn:ogc:def:crs:EPSG:\" (or "
"\"http://www.opengis.net/def/crs/EPSG/0/\" starting with GDAL 2.1.2), for "
"geographic coordinate systems (as returned by WFS 1.1.0 for example), the "
"axis order should be (latitude, longitude) as required by the standards, but "
"this is unusual and can cause issues with applications unaware of axis "
"order. So by default, the driver will swap the coordinates so that they are "
"in the (longitude, latitude) order and report a SRS without axis order "
"specified. It is possible to get the original (latitude, longitude) order "
"and SRS with axis order by setting the configuration option :config:"
"`GML_INVERT_AXIS_ORDER_IF_LAT_LONG` to **NO**."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:152
msgid ""
"There also situations where the srsName is of the form \"EPSG:"
"XXXX\" (whereas \"urn:ogc:def:crs:EPSG::XXXX\" would have been more explicit "
"on the intent) and the coordinates in the file are in (latitude, longitude) "
"order. By default, OGR will not consider the EPSG axis order and will report "
"the coordinates in (latitude,longitude) order. However, if you set the "
"configuration option :config:`GML_CONSIDER_EPSG_AS_URN` to **YES**, the "
"rules explained in the previous paragraph will be applied."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:160
msgid ""
"The above also applied for projected coordinate systems whose EPSG preferred "
"axis order is (northing, easting)."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:163
msgid ""
"Starting with GDAL 2.1.2, the :oo:`SWAP_COORDINATES` open option (or :config:"
"`GML_SWAP_COORDINATES` configuration option) can be set to AUTO/YES/NO. It "
"controls whether the order of the x/y or long/lat coordinates should be "
"swapped. In AUTO mode, the driver will determine if swapping must be done "
"from the srsName and value of other options like :oo:`CONSIDER_EPSG_AS_URN` "
"and :oo:`INVERT_AXIS_ORDER_IF_LAT_LONG`. When :oo:`SWAP_COORDINATES` is set "
"to YES, coordinates will be always swapped regarding the order they appear "
"in the GML, and when it set to NO, they will be kept in the same order. The "
"default is AUTO."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:175
msgid "Schema"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:177
msgid ""
"In contrast to most GML readers, the OGR GML reader does not require the "
"presence of an XML Schema definition of the feature classes (file with .xsd "
"extension) to be able to read the GML file. If the .xsd file is absent or "
"OGR is not able to parse it, the driver attempts to automatically discover "
"the feature classes and their associated properties by scanning the file and "
"looking for \"known\" gml objects in the gml namespace to determine the "
"organization. While this approach is error prone, it has the advantage of "
"working for GML files even if the associated schema (.xsd) file has been "
"lost."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:187
msgid ""
"It is possible to specify an explicit filename for the XSD schema to use, by "
"using \"a_filename.gml,xsd=another_filename.xsd\" as a connection string. "
"The XSD can also be specified as the value of the XSD open option."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:193
msgid ""
"The first time a GML file is opened, if the associated .xsd is absent or "
"could not been parsed correctly, it is completely scanned in order to "
"determine the set of featuretypes, the attributes associated with each and "
"other dataset level information. This information is stored in a .gfs file "
"with the same basename as the target gml file. Subsequent accesses to the "
"same GML file will use the .gfs file to predefine dataset level information "
"accelerating access. To a limited extent the .gfs file can be manually "
"edited to alter how the GML file will be parsed. Be warned that the .gfs "
"file will be ignored if the associated .gml file has a newer timestamp."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:204
msgid ""
"When prescanning the GML file to determine the list of feature types, and "
"fields, the contents of fields are scanned to try and determine the type of "
"the field. In some applications it is easier if all fields are just treated "
"as string fields. This can be accomplished by setting the configuration "
"option :config:`GML_FIELDTYPES` to the value **ALWAYS_STRING**."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:210
msgid ""
"The :config:`GML_ATTRIBUTES_TO_OGR_FIELDS` configuration option can be set "
"to **YES** so that attributes of GML elements are also taken into account to "
"create OGR fields."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:214
msgid ""
"You can use :config:`GML_GFS_TEMPLATE` configuration option (or :oo:"
"`GFS_TEMPLATE` open option) set to a **path_to_template.gfs** in order to "
"unconditionally use a predefined GFS file. This option is really useful when "
"you are planning to import many distinct GML files in subsequent steps [**-"
"append**] and you absolutely want to preserve a fully consistent data layout "
"for the whole GML set. Please, pay attention not to use the **-lco "
"LAUNDER=yes** setting when using :config:`GML_GFS_TEMPLATE`; this should "
"break the correct recognition of attribute names between subsequent GML "
"import runs."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:225
msgid "Particular GML application schemas"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:227
msgid ""
"Feature attributes in nested GML elements (non-flat attribute hierarchy) "
"that can be found in some GML profiles, such as UK Ordnance Survey "
"MasterMap, are detected. IntegerList, RealList and StringList field types "
"when a GML element has several occurrences are also supported."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:232
msgid ""
"A specialized GML driver - the :ref:`NAS <vector.nas>` driver - is available "
"to read German AAA GML Exchange Format (NAS/ALKIS)."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:236
msgid "The GML driver has partial support for reading AIXM or CityGML files."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:239
msgid "The GML driver supports reading :"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:241
msgid ""
"`Finnish National Land Survey GML files (a.k.a MTK GML) for topographic "
"data. <http://xml.nls.fi/XML/Schema/Maastotietojarjestelma/MTK/201202/"
"Maastotiedot.xsd>`__"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:244
msgid ""
"`Finnish National Land Survey GML files for cadastral data <http://xml.nls."
"fi/XML/Schema/sovellus/ktjkii/modules/kiinteistotietojen_kyselypalvelu_WFS/"
"Asiakasdokumentaatio/ktjkiiwfs/2010/02/>`__."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:246
msgid ""
"`Cadastral data in Inspire GML schemas <http://inspire.ec.europa.eu/schemas/"
"cp/3.0/CadastralParcels.xsd>`__."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:248
msgid ""
"`Czech RUIAN Exchange Format (VFR) <http://www.cuzk.cz/Uvod/Produkty-a-"
"sluzby/RUIAN/2-Poskytovani-udaju-RUIAN-ISUI-VDP/Vymenny-format-RUIAN/Vymenny-"
"format-RUIAN-%28VFR%29.aspx>`__."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:251
msgid "The GML driver supports reading responses to CSW GetRecords queries."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:253
msgid ""
"Since OGR 2.2, the GML driver supports reading Japanese FGD GML v4 files."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:257
msgid "Geometry reading"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:259
msgid ""
"When reading a feature, the driver will by default only take into account "
"the last recognized GML geometry found (in case they are multiples) in the "
"XML subtree describing the feature."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:263
msgid ""
"But, if the .xsd schema is understood by the XSD parser and declares several "
"geometry fields, or the .gfs file declares several geometry fields, multiple "
"geometry fields will be reported by the GML driver according to :ref:"
"`rfc-41`."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:268
msgid ""
"In case of multiple geometry occurrences, if a geometry is in a <geometry> "
"element, this will be the one selected. This will make default behavior "
"consistent with Inspire objects."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:272
msgid ""
"The user can change the .gfs file to select the appropriate geometry by "
"specifying its path with the <GeometryElementPath> element. See the "
"description of the .gfs syntax below."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:277
msgid ""
"GML geometries including TopoCurve, TopoSurface, MultiCurve are also "
"supported. The TopoCurve type GML geometry can be interpreted as either of "
"two types of geometries. The Edge elements in it contain curves and their "
"corresponding nodes. By default only the curves, the main geometries, are "
"reported as OGRMultiLineString. To retrieve the nodes, as OGRMultiPoint, the "
"configuration option :config:`GML_GET_SECONDARY_GEOM` should be set to the "
"value **YES**. When this is set only the secondary geometries are reported."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:286
msgid ""
"Arc, ArcString, ArcByBulge, ArcByCenterPoint, Circle and "
"CircleByCenterPoints will be returned as circular string OGR geometries. If "
"they are included in other GML elements such as CurveComposite, MultiCurve, "
"Surface, corresponding non-linear OGR geometries will be returned as well. "
"When reading GML3 application schemas, declarations of geometry fields such "
"as CurvePropertyType, SurfacePropertyType, MultiCurvePropertyType or "
"MultiSurfacePropertyType will be also interpreted as being potential non-"
"linear geometries, and corresponding OGR geometry type will be used for the "
"layer geometry type."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:298
msgid "gml:xlink resolving"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:300
msgid ""
"gml:xlink resolving is supported. When the resolver finds an element "
"containing the tag xlink:href, it tries to find the corresponding element "
"with the gml:id in the same gml file, other gml file in the file system or "
"on the web using cURL. Set the configuration option :config:"
"`GML_SKIP_RESOLVE_ELEMS` to **NONE** to enable resolution."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:306
msgid ""
"By default the resolved file will be saved in the same directory as the "
"original file with the extension \".resolved.gml\", if it doesn't exist "
"already. This behavior can be changed using the configuration option :config:"
"`GML_SAVE_RESOLVED_TO`. Set it to **SAME** to overwrite the original file. "
"Set it to a **filename ending with .gml** to save it to that location. Any "
"other values are ignored. If the resolver cannot write to the file for any "
"reason, it will try to save it to a temporary file generated using "
"CPLGenerateTempFilename(\"ResolvedGML\"); if it cannot, resolution fails."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:316
msgid ""
"Note that the resolution algorithm is not optimized for large files. For "
"files with more than a couple of thousand xlink:href tags, the process can "
"go beyond a few minutes. A rough progress is displayed through CPLDebug() "
"for every 256 links. It can be seen by setting the environment variable :"
"config:`CPL_DEBUG`. The resolution time can be reduced if you know any "
"elements that will not be needed. Mention a comma separated list of names of "
"such elements with the configuration option :config:"
"`GML_SKIP_RESOLVE_ELEMS`. Set it to **ALL** to skip resolving altogether "
"(default action). Set it to **NONE** to resolve all the xlinks."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:327
msgid ""
"An alternative resolution method is available. This alternative method will "
"be activated using the configuration option :config:"
"`GML_SKIP_RESOLVE_ELEMS=HUGE`. In this case any gml:xlink will be resolved "
"using a temporary SQLite DB so to identify any corresponding gml:id "
"relation. At the end of this SQL-based process, a resolved file will be "
"generated exactly as in the **NONE** case but without their limits. The main "
"advantages in using an external (temporary) DBMS so to resolve gml:xlink and "
"gml:id relations are the following:"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:336
msgid ""
"no memory size constraints. The **NONE** method stores the whole GML node-"
"tree in-memory; and this practically means that no GML file bigger than 1 GB "
"can be processed at all using a 32-bit platform, due to memory allocation "
"limits. Using a file-system based DBMS avoids at all this issue."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:341
msgid ""
"by far better efficiency, most notably when huge GML files containing many "
"thousands (or even millions) of xlink:href / gml:id relational pairs."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:344
msgid ""
"using the :config:`GML_SKIP_RESOLVE_ELEMS=HUGE` method realistically allows "
"to successfully resolve some really huge GML file (3GB+) containing many "
"millions xlink:href / gml:id in a reasonable time (about an hour or so on)."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:348
msgid ""
"The :config:`GML_SKIP_RESOLVE_ELEMS=HUGE` method supports the following "
"further configuration option:"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:355
msgid "TopoSurface interpretation rules [polygons and internal holes]"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:357
msgid ""
"The GML driver is able to recognize two different interpretation rules for "
"TopoSurface when a polygon contains any internal hole:"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:361
msgid "the previously supported interpretation rule assumed that:"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:363
#: ../../../source/drivers/vector/gml.rst:374
msgid "each TopoSurface may be represented as a collection of many Faces"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:364
msgid ""
"*positive* Faces [i.e. declaring **orientation=\"+\"**] are assumed to "
"represent the Exterior Ring of some Polygon."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:366
msgid ""
"*negative* Faces [i.e. declaring **orientation=\"-\"**] are assumed to "
"represent an Interior Ring (aka *hole*) belonging to the latest declared "
"Exterior Ring."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:369
msgid ""
"ordering any Edge used to represent each Ring is important: each Edge is "
"expected to be exactly adjacent to the next one."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:372
msgid "the new interpretation rule now assumes that:"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:375
msgid ""
"the declared **orientation** for any Face has nothing to deal with Exterior/"
"Interior Rings"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:377
msgid ""
"each Face is now intended to represent a complete Polygon, eventually "
"including any possible Interior Ring (*holes*)"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:379
msgid ""
"the relative ordering of any Edge composing the same Face is completely not "
"relevant"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:382
msgid ""
"The newest interpretation seems to fully match GML 3 standard "
"recommendations; so this latest is now assumed to be the default "
"interpretation supported by OGR."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:386
msgid ""
"**NOTE** : Using the newest interpretation requires GDAL/OGR to be built "
"against the GEOS library."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:389
msgid ""
"Using the :config:`GML_FACE_HOLE_NEGATIVE` configuration option you can "
"select the actual interpretation to be applied when parsing GML 3 topologies:"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:393
msgid ""
"setting :config:`GML_FACE_HOLE_NEGATIVE=NO` (*default* option) will activate "
"the newest interpretation rule"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:395
msgid ""
"but explicitly setting :config:`GML_FACE_HOLE_NEGATIVE=YES` still enables to "
"activate the old interpretation rule"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:399
msgid "Encoding issues"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:401
msgid "Expat library supports reading the following built-in encodings :"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:403
msgid "US-ASCII"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:404
msgid "UTF-8"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:405
msgid "UTF-16"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:406
msgid "ISO-8859-1"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:407
msgid "Windows-1252"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:409
msgid ""
"The content returned by OGR will be encoded in UTF-8, after the conversion "
"from the encoding mentioned in the file header is."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:412
msgid ""
"If the GML file is not encoded in one of the previous encodings and the only "
"parser available is Expat, it will not be parsed by the GML driver. You may "
"convert it into one of the supported encodings with the *iconv* utility for "
"example and change accordingly the *encoding* parameter value in the XML "
"header."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:418
msgid ""
"When writing a GML file, the driver expects UTF-8 content to be passed in."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:421
msgid ""
"Note: The .xsd schema files are parsed with an integrated XML parser which "
"does not currently understand XML encodings specified in the XML header. It "
"expects encoding to be always UTF-8. If attribute names in the schema file "
"contains non-ascii characters, it is better to use *iconv* utility and "
"convert the .xsd file into UTF-8 encoding first."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:428
msgid "Feature id (fid / gml:id)"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:430
msgid ""
"The driver exposes the content of the gml:id attribute as a string field "
"called *gml_id*, when reading GML WFS documents. When creating a GML3 "
"document, if a field is called *gml_id*, its content will also be used to "
"write the content of the gml:id attribute of the created feature."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:436
msgid ""
"The driver autodetects the presence of a fid (GML2) (resp. gml:id (GML3)) "
"attribute at the beginning of the file, and, if found, exposes it by default "
"as a *fid* (resp. *gml_id*) field. The autodetection can be overridden by "
"specifying the :config:`GML_EXPOSE_FID` or :config:`GML_EXPOSE_GML_ID` "
"configuration option to **YES** or **NO**."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:444
msgid ""
"When creating a GML2 document, if a field is called *fid*, its content will "
"also be used to write the content of the fid attribute of the created "
"feature."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:451
msgid "Performance issues with large multi-layer GML files."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:453
msgid ""
"There is only one GML parser per GML datasource shared among the various "
"layers. By default, the GML driver will restart reading from the beginning "
"of the file, each time a layer is accessed for the first time, which can "
"lead to poor performance with large GML files."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:458
msgid ""
"The :config:`GML_READ_MODE` configuration option can be set to "
"**SEQUENTIAL_LAYERS** if all features belonging to the same layer are "
"written sequentially in the file. The reader will then avoid unnecessary "
"resets when layers are read completely one after the other. To get the best "
"performance, the layers must be read in the order they appear in the file."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:465
msgid ""
"If no .xsd and .gfs files are found, the parser will detect the layout of "
"layers when building the .gfs file. If the layers are found to be "
"sequential, a *<SequentialLayers>true</SequentialLayers>* element will be "
"written in the .gfs file, so that the :config:`GML_READ_MODE` will be "
"automatically initialized to SEQUENTIAL_LAYERS if not explicitly set by the "
"user."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:472
msgid ""
"The :config:`GML_READ_MODE` configuration option can be set to "
"INTERLEAVED_LAYERS to be able to read a GML file whose features from "
"different layers are interleaved. In the case, the semantics of the "
"GetNextFeature() will be slightly altered, in a way where a NULL return does "
"not necessarily mean that all features from the current layer have been "
"read, but it could also mean that there is still a feature to read, but that "
"belongs to another layer. In that case, the file should be read with code "
"similar to the following one :"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:483
msgid ""
"int nLayerCount = poDS->GetLayerCount();\n"
"int bFoundFeature;\n"
"do\n"
"{\n"
"    bFoundFeature = FALSE;\n"
"    for( int iLayer = 0; iLayer < nLayerCount; iLayer++ )\n"
"    {\n"
"        OGRLayer   *poLayer = poDS->GetLayer(iLayer);\n"
"        OGRFeature *poFeature;\n"
"        while((poFeature = poLayer->GetNextFeature()) != NULL)\n"
"        {\n"
"            bFoundFeature = TRUE;\n"
"            poFeature->DumpReadable(stdout, NULL);\n"
"            OGRFeature::DestroyFeature(poFeature);\n"
"        }\n"
"    }\n"
"} while (bInterleaved && bFoundFeature);"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:502
msgid "Open options"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:571
msgid ""
"Whether to consider srsName like EPSG:XXXX as respecting EPSG axis order."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:627
msgid "Creation Issues"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:629
msgid ""
"On export all layers are written to a single GML file all in a single "
"feature collection. Each layer's name is used as the element name for "
"objects from that layer. Geometries are always written as the ogr:"
"geometryProperty element on the feature."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:635
msgid "Dataset creation options"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:677
msgid ""
"*GML2* in order to write GML files that follow GML 2.1.2 (Default before "
"GDAL 3.4)"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:678
msgid "*GML3* in order to write GML files that follow GML 3.1.1 SF-0 profile."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:680
msgid ""
"*GML3Deegree* in order to produce a GML 3.1.1 .XSD schema, with a few "
"variations with respect to what is recommended by GML3 SF-0 profile, but "
"that will be better accepted by some software (such as Deegree 3)."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:684
msgid ""
"*GML3.2*\\ in order to write GML files that follow GML 3.2.1 SF-0 profile. "
"(Default since GDAL 3.4)"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:687
msgid ""
"Non-linear geometries can be written. This is only compatible with selecting "
"on of that above GML3 format variant. Otherwise, such geometries will be "
"approximating into their closest matching linear geometry. Note: fields of "
"type StringList, RealList or IntegerList can be written. This will cause to "
"advertise the SF-1 profile in the .XSD schema (such types are not supported "
"by SF-0)."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:699
msgid ""
"Whether to use the gml:FeatureCollection, instead of creating a dedicated "
"container element in the target namespace. Only valid for FORMAT=GML3/"
"GML3.2. Note that gml:FeatureCollection has been deprecated in GML 3.2, and "
"is not allowed by the OGC 06-049r1 \"Geography Markup Language (GML) simple "
"features profile\" (for GML 3.1.1) and OGC 10-100r3 \"Geography Markup "
"Language (GML) simple features profile (with Corrigendum)\" (for GML 3.2) "
"specifications."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:778
msgid "VSI Virtual File System API support"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:780
msgid ""
"The driver supports reading and writing to files managed by VSI Virtual File "
"System API, which include \"regular\" files, as well as files in the /"
"vsizip/ (read-write) , /vsigzip/ (read-write) , /vsicurl/ (read-only) "
"domains."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:785
msgid ""
"Writing to /dev/stdout or /vsistdout/ is also supported. Note that in that "
"case, only the content of the GML file will be written to the standard "
"output (and not the .xsd). The <boundedBy> element will not be written. This "
"is also the case if writing in /vsigzip/"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:791
msgid "Syntax of .gfs files"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:793
msgid ""
"A XML Schema for .gfs files can be found at https://raw.githubusercontent."
"com/OSGeo/gdal/master/ogr/ogrsf_frmts/gml/data/gfs.xsd ."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:796
#: ../../../source/drivers/vector/gml.rst:904
#: ../../../source/drivers/vector/gml.rst:974
msgid "Let's consider the following test.gml file :"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:798
msgid ""
"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"<gml:FeatureCollection xmlns:gml=\"http://www.opengis.net/gml\">\n"
"  <gml:featureMember>\n"
"    <LAYER>\n"
"      <attrib1>attrib1_value</attrib1>\n"
"      <attrib2container>\n"
"        <attrib2>attrib2_value</attrib2>\n"
"      </attrib2container>\n"
"      <location1container>\n"
"        <location1>\n"
"            <gml:Point><gml:coordinates>3,50</gml:coordinates></gml:Point>\n"
"        </location1>\n"
"      </location1container>\n"
"      <location2>\n"
"        <gml:Point><gml:coordinates>2,49</gml:coordinates></gml:Point>\n"
"      </location2>\n"
"    </LAYER>\n"
"  </gml:featureMember>\n"
"</gml:FeatureCollection>"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:820
#: ../../../source/drivers/vector/gml.rst:987
#: ../../../source/drivers/vector/gml.rst:1055
msgid "and the following associated .gfs file."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:822
msgid ""
"<GMLFeatureClassList>\n"
"  <GMLFeatureClass>\n"
"    <Name>LAYER</Name>\n"
"    <ElementPath>LAYER</ElementPath>\n"
"    <GeometryElementPath>location1container|location1</GeometryElementPath>\n"
"    <PropertyDefn>\n"
"      <Name>attrib1</Name>\n"
"      <ElementPath>attrib1</ElementPath>\n"
"      <Type>String</Type>\n"
"      <Width>13</Width>\n"
"    </PropertyDefn>\n"
"    <PropertyDefn>\n"
"      <Name>attrib2</Name>\n"
"      <ElementPath>attrib2container|attrib2</ElementPath>\n"
"      <Type>String</Type>\n"
"      <Width>13</Width>\n"
"    </PropertyDefn>\n"
"  </GMLFeatureClass>\n"
"</GMLFeatureClassList>"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:844
msgid ""
"Note the presence of the '|' character in the <ElementPath> and "
"<GeometryElementPath> elements to specify the wished field/geometry element "
"that is a nested XML element. Nested field elements are supported, as well "
"as specifying <GeometryElementPath> If GeometryElementPath is not specified, "
"the GML driver will use the last recognized geometry element."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:851
msgid ""
"The <GeometryType> element can be specified to force the geometry type. "
"Accepted values are : 0 (any geometry type), 1 (point), 2 (linestring), 3 "
"(polygon), 4 (multipoint), 5 (multilinestring), 6 (multipolygon), 7 "
"(geometrycollection)."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:856
msgid ""
"The <GeometryElementPath> and <GeometryType> can be specified as many times "
"as there are geometry fields in the GML file. Another possibility is to "
"define a <GeomPropertyDefn>element as many times as necessary:"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:861
msgid ""
"<GMLFeatureClassList>\n"
"  <GMLFeatureClass>\n"
"    <Name>LAYER</Name>\n"
"    <ElementPath>LAYER</ElementPath>\n"
"    <GeomPropertyDefn>\n"
"        <Name>geometry</Name> <!-- OGR geometry name -->\n"
"        <ElementPath>geometry</ElementPath> <!-- XML element name possibly "
"with '|' to specify the path -->\n"
"        <Type>MultiPolygon</Type>\n"
"    </GeomPropertyDefn>\n"
"    <GeomPropertyDefn>\n"
"        <Name>referencePoint</Name>\n"
"        <ElementPath>referencePoint</ElementPath>\n"
"        <Type>Point</Type>\n"
"    </GeomPropertyDefn>\n"
"  </GMLFeatureClass>\n"
"</GMLFeatureClassList>"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:880
#: ../../../source/drivers/vector/gml.rst:1009
msgid "The output of *ogrinfo test.gml -ro -al* is:"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:884
msgid ""
"Layer name: LAYER\n"
"Geometry: Unknown (any)\n"
"Feature Count: 1\n"
"Extent: (3.000000, 50.000000) - (3.000000, 50.000000)\n"
"Layer SRS WKT:\n"
"(unknown)\n"
"Geometry Column = location1container|location1\n"
"attrib1: String (13.0)\n"
"attrib2: String (13.0)\n"
"OGRFeature(LAYER):0\n"
"  attrib1 (String) = attrib1_value\n"
"  attrib2 (String) = attrib2_value\n"
"  POINT (3 50)"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:899
msgid "Advanced .gfs syntax"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:902
msgid "Specifying ElementPath to find objects embedded into top level objects"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:906
msgid ""
"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n"
"<gml:FeatureCollection xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n"
"                       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-"
"instance\"\n"
"                       gml:id=\"foo\" xmlns:gml=\"http://www.opengis.net/"
"gml/3.2\">\n"
"  <gml:featureMember>\n"
"    <TopLevelObject gml:id=\"TopLevelObject.1\">\n"
"      <content>\n"
"        <Object gml:id=\"Object.1\">\n"
"          <geometry>\n"
"            <gml:Polygon gml:id=\"Object.1.Geometry\" srsName=\"urn:ogc:def:"
"crs:EPSG::4326\">\n"
"              <gml:exterior>\n"
"                <gml:LinearRing>\n"
"                  <gml:posList srsDimension=\"2\">48 2 49 2 49 3 48 3 48 2</"
"gml:posList>\n"
"                </gml:LinearRing>\n"
"              </gml:exterior>\n"
"            </gml:Polygon>\n"
"          </geometry>\n"
"          <foo>bar</foo>\n"
"        </Object>\n"
"      </content>\n"
"      <content>\n"
"        <Object gml:id=\"Object.2\">\n"
"          <geometry>\n"
"            <gml:Polygon gml:id=\"Object.2.Geometry\" srsName=\"urn:ogc:def:"
"crs:EPSG::4326\">\n"
"              <gml:exterior>\n"
"                <gml:LinearRing>\n"
"                  <gml:posList srsDimension=\"2\">-48 2 -49 2 -49 3 -48 3 "
"-48 2</gml:posList>\n"
"                </gml:LinearRing>\n"
"              </gml:exterior>\n"
"            </gml:Polygon>\n"
"          </geometry>\n"
"          <foo>baz</foo>\n"
"        </Object>\n"
"      </content>\n"
"    </TopLevelObject>\n"
"  </gml:featureMember>\n"
"</gml:FeatureCollection>"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:946
msgid ""
"By default, only the TopLevelObject object would be reported and it would "
"only use the second geometry. This is not the desired behavior in that "
"instance. You can edit the generated .gfs and modify it like the following "
"in order to specify a full path to the element (top level XML element being "
"omitted) :"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:952
msgid ""
"<GMLFeatureClassList>\n"
"  <GMLFeatureClass>\n"
"    <Name>Object</Name>\n"
"    <ElementPath>featureMember|TopLevelObject|content|Object</ElementPath>\n"
"    <GeometryType>3</GeometryType>\n"
"    <PropertyDefn>\n"
"      <Name>foo</Name>\n"
"      <ElementPath>foo</ElementPath>\n"
"      <Type>String</Type>\n"
"    </PropertyDefn>\n"
"  </GMLFeatureClass>\n"
"</GMLFeatureClassList>"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:968
msgid "Getting XML attributes as OGR fields"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:970
msgid ""
"The element@attribute syntax can be used in the <ElementPath> to specify "
"that the value of attribute 'attribute' of element 'element' must be fetched."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:976
msgid ""
"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"<gml:FeatureCollection xmlns:gml=\"http://www.opengis.net/gml\">\n"
"  <gml:featureMember>\n"
"    <LAYER>\n"
"      <length unit=\"m\">5</length>\n"
"    </LAYER>\n"
"  </gml:featureMember>\n"
"</gml:FeatureCollection>"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:989
msgid ""
"<GMLFeatureClassList>\n"
"  <GMLFeatureClass>\n"
"    <Name>LAYER</Name>\n"
"    <ElementPath>LAYER</ElementPath>\n"
"    <GeometryType>100</GeometryType> <!-- no geometry -->\n"
"    <PropertyDefn>\n"
"      <Name>length</Name>\n"
"      <ElementPath>length</ElementPath>\n"
"      <Type>Real</Type>\n"
"    </PropertyDefn>\n"
"    <PropertyDefn>\n"
"      <Name>length_unit</Name>\n"
"      <ElementPath>length@unit</ElementPath>\n"
"      <Type>String</Type>\n"
"    </PropertyDefn>\n"
"  </GMLFeatureClass>\n"
"</GMLFeatureClassList>"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:1013
msgid ""
"Layer name: LAYER\n"
"Geometry: None\n"
"Feature Count: 1\n"
"Layer SRS WKT:\n"
"(unknown)\n"
"gml_id: String (0.0)\n"
"length: Real (0.0)\n"
"length_unit: String (0.0)\n"
"OGRFeature(LAYER):0\n"
"  gml_id (String) = (null)\n"
"  length (Real) = 5\n"
"  length_unit (String) = m"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:1027
msgid "Using conditions on XML attributes"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:1029
msgid ""
"A <Condition> element can be specified as a child element of a "
"<PropertyDefn>. The content of the Condition follows a minimalistic XPath "
"syntax. It must be of the form @attrname[=|!=]'attrvalue' [and|or "
"other_cond]*. Note that 'and' and 'or' operators cannot be mixed (their "
"precedence is not taken into account)."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:1035
msgid ""
"Several <PropertyDefn> can be defined with the same <ElementPath>, but with "
"<Condition> that must be mutually exclusive."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:1038
msgid "Let's consider the following testcondition.gml file :"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:1040
msgid ""
"<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n"
"<ogr:FeatureCollection\n"
"     xmlns:ogr=\"http://ogr.maptools.org/\"\n"
"     xmlns:gml=\"http://www.opengis.net/gml\">\n"
"  <gml:featureMember>\n"
"    <ogr:testcondition fid=\"testcondition.0\">\n"
"      <ogr:name lang=\"en\">English name</ogr:name>\n"
"      <ogr:name lang=\"fr\">Nom francais</ogr:name>\n"
"      <ogr:name lang=\"de\">Deutsche name</ogr:name>\n"
"    </ogr:testcondition>\n"
"  </gml:featureMember>\n"
"</ogr:FeatureCollection>"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:1057
msgid ""
"<GMLFeatureClassList>\n"
"  <GMLFeatureClass>\n"
"    <Name>testcondition</Name>\n"
"    <ElementPath>testcondition</ElementPath>\n"
"    <GeometryType>100</GeometryType>\n"
"    <PropertyDefn>\n"
"      <Name>name_en</Name>\n"
"      <ElementPath>name</ElementPath>\n"
"      <Condition>@lang='en'</Condition>\n"
"      <Type>String</Type>\n"
"    </PropertyDefn>\n"
"    <PropertyDefn>\n"
"      <Name>name_fr</Name>\n"
"      <ElementPath>name</ElementPath>\n"
"      <Condition>@lang='fr'</Condition>\n"
"      <Type>String</Type>\n"
"    </PropertyDefn>\n"
"    <PropertyDefn>\n"
"      <Name>name_others_lang</Name>\n"
"      <ElementPath>name@lang</ElementPath>\n"
"      <Condition>@lang!='en' and @lang!='fr'</Condition>\n"
"      <Type>StringList</Type>\n"
"    </PropertyDefn>\n"
"    <PropertyDefn>\n"
"      <Name>name_others</Name>\n"
"      <ElementPath>name</ElementPath>\n"
"      <Condition>@lang!='en' and @lang!='fr'</Condition>\n"
"      <Type>StringList</Type>\n"
"    </PropertyDefn>\n"
"  </GMLFeatureClass>\n"
"</GMLFeatureClassList>"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:1091
msgid "The output of *ogrinfo testcondition.gml -ro -al* is:"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:1095
msgid ""
"Layer name: testcondition\n"
"Geometry: None\n"
"Feature Count: 1\n"
"Layer SRS WKT:\n"
"(unknown)\n"
"fid: String (0.0)\n"
"name_en: String (0.0)\n"
"name_fr: String (0.0)\n"
"name_others_lang: StringList (0.0)\n"
"name_others: StringList (0.0)\n"
"OGRFeature(testcondition):0\n"
"  fid (String) = testcondition.0\n"
"  name_en (String) = English name\n"
"  name_fr (String) = Nom francais\n"
"  name_others_lang (StringList) = (1:de)\n"
"  name_others (StringList) = (1:Deutsche name)"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:1113
msgid "Registry for GML application schemas"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:1115
msgid ""
"The \"data\" directory of the GDAL installation contains a \"gml_registry."
"xml\" file that links feature types of GML application schemas to .xsd or ."
"gfs files that contain their definition. This is used in case no valid .gfs "
"or .xsd file is found next to the GML file."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:1120
msgid ""
"An alternate location for the registry file can be defined by setting its "
"full pathname to the GML_REGISTRY configuration option."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:1123
msgid "An example of such a file is :"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:1125
msgid ""
"<gml_registry>\n"
"    <!-- Finnish National Land Survey cadastral data -->\n"
"    <namespace prefix=\"ktjkiiwfs\" uri=\"http://xml.nls.fi/"
"ktjkiiwfs/2010/02\" useGlobalSRSName=\"true\">\n"
"        <featureType elementName=\"KiinteistorajanSijaintitiedot\"\n"
"                 schemaLocation=\"http://xml.nls.fi/XML/Schema/sovellus/"
"ktjkii/modules/kiinteistotietojen_kyselypalvelu_WFS/Asiakasdokumentaatio/"
"ktjkiiwfs/2010/02/KiinteistorajanSijaintitiedot.xsd\"/>\n"
"        <featureType elementName=\"PalstanTunnuspisteenSijaintitiedot\"\n"
"                 schemaLocation=\"http://xml.nls.fi/XML/Schema/sovellus/"
"ktjkii/modules/kiinteistotietojen_kyselypalvelu_WFS/Asiakasdokumentaatio/"
"ktjkiiwfs/2010/02/palstanTunnuspisteenSijaintitiedot.xsd\"/>\n"
"        <featureType elementName=\"RekisteriyksikonTietoja\"\n"
"                 schemaLocation=\"http://xml.nls.fi/XML/Schema/sovellus/"
"ktjkii/modules/kiinteistotietojen_kyselypalvelu_WFS/Asiakasdokumentaatio/"
"ktjkiiwfs/2010/02/RekisteriyksikonTietoja.xsd\"/>\n"
"        <featureType elementName=\"PalstanTietoja\"\n"
"                 schemaLocation=\"http://xml.nls.fi/XML/Schema/sovellus/"
"ktjkii/modules/kiinteistotietojen_kyselypalvelu_WFS/Asiakasdokumentaatio/"
"ktjkiiwfs/2010/02/PalstanTietoja.xsd\"/>\n"
"    </namespace>\n"
"\n"
"    <!-- Inspire CadastralParcels schema -->\n"
"    <namespace prefix=\"cp\" uri=\"urn:x-inspire:specification:gmlas:"
"CadastralParcels:3.0\" useGlobalSRSName=\"true\">\n"
"        <featureType elementName=\"BasicPropertyUnit\"\n"
"                     gfsSchemaLocation=\"inspire_cp_BasicPropertyUnit.gfs\"/"
">\n"
"        <featureType elementName=\"CadastralBoundary\"\n"
"                     gfsSchemaLocation=\"inspire_cp_CadastralBoundary.gfs\"/"
">\n"
"        <featureType elementName=\"CadastralParcel\"\n"
"                     gfsSchemaLocation=\"inspire_cp_CadastralParcel.gfs\"/>\n"
"        <featureType elementName=\"CadastralZoning\"\n"
"                     gfsSchemaLocation=\"inspire_cp_CadastralZoning.gfs\"/>\n"
"    </namespace>\n"
"\n"
"    <!-- Czech RUIAN (VFR) schema (v1) -->\n"
"    <namespace prefix=\"vf\"\n"
"               uri=\"urn:cz:isvs:ruian:schemas:VymennyFormatTypy:v1 ../ruian/"
"xsd/vymenny_format/VymennyFormatTypy.xsd\"\n"
"               useGlobalSRSName=\"true\">\n"
"        <featureType elementName=\"TypSouboru\"\n"
"                     elementValue=\"OB\"\n"
"                     gfsSchemaLocation=\"ruian_vf_ob_v1.gfs\"/>\n"
"        <featureType elementName=\"TypSouboru\"\n"
"                     elementValue=\"ST\"\n"
"                     gfsSchemaLocation=\"ruian_vf_st_v1.gfs\"/>\n"
"    </namespace>\n"
"</gml_registry>"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:1165
msgid ""
"XML schema definition (.xsd) files are pointed by the schemaLocation "
"attribute, whereas OGR .gfs files are pointed by the gfsSchemaLocation "
"attribute. In both cases, the filename can be a URL (http://, https://), an "
"absolute filename, or a relative filename (relative to the location of "
"gml_registry.xml)."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:1171
msgid ""
"The schema is used if and only if the namespace prefix and URI are found in "
"the first bytes of the GML file (e.g. *xmlns:ktjkiiwfs=\"http://xml.nls.fi/"
"ktjkiiwfs/2010/02\"*), and that the feature type is also detected in the "
"first bytes of the GML file (e.g. *ktjkiiwfs:"
"KiinteistorajanSijaintitiedot*). If the element value is defined than the "
"schema is used only if the feature type together with the value is found in "
"the first bytes of the GML file (e.g. *vf:TypSouboru>OB_UKSH*)."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:1181
msgid "Building junction tables"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:1183
msgid ""
"The :source_file:`swig/python/gdal-utils/osgeo_utils/samples/"
"ogr_build_junction_table.py` script can be used to build a `junction table "
"<http://en.wikipedia.org/wiki/Junction_table>`__ from OGR layers that "
"contain \"XXXX_href\" fields. Let's considering the following output of a "
"GML file with links to other features :"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:1192
msgid ""
"OGRFeature(myFeature):1\n"
"  gml_id (String) = myFeature.1\n"
"  [...]\n"
"  otherFeature_href (StringList) = (2:#otherFeature.10,#otherFeature.20)\n"
"\n"
"OGRFeature(myFeature):2\n"
"  gml_id (String) = myFeature.2\n"
"  [...]\n"
"  otherFeature_href (StringList) = (2:#otherFeature.30,#otherFeature.10)"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:1202
msgid "After running"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:1206
msgid "ogr2ogr -f PG PG:dbname=mydb my.gml"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:1208
msgid "to import it into PostGIS and"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:1212
msgid "python3 ogr_build_junction_table.py PG:dbname=mydb"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:1214
msgid ""
", a *myfeature_otherfeature* table will be created and will contain the "
"following content :"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:1218
msgid "myfeature_gml_id"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:1218
msgid "otherfeature_gml_id"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:1220
#: ../../../source/drivers/vector/gml.rst:1221
msgid "myFeature.1"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:1220
#: ../../../source/drivers/vector/gml.rst:1223
msgid "otherFeature.10"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:1221
msgid "otherFeature.20"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:1222
#: ../../../source/drivers/vector/gml.rst:1223
msgid "myFeature.2"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:1222
msgid "otherFeature.30"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:1227
msgid "Reading datasets resulting from a WFS 2.0 join queries"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:1229
msgid "The GML driver can read datasets resulting from a WFS 2.0 join queries."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:1231
msgid "Such datasets typically look like:"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:1233
msgid ""
"<wfs:FeatureCollection xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\n"
"    xmlns:app=\"http://app.com\"\n"
"    xmlns:wfs=\"http://www.opengis.net/wfs/2.0\"\n"
"    xmlns:gml=\"http://www.opengis.net/gml/3.2\"\n"
"    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n"
"    numberMatched=\"unknown\" numberReturned=\"2\" "
"timeStamp=\"2015-01-01T00:00:00.000Z\"\n"
"    xsi:schemaLocation=\"http://www.opengis.net/gml/3.2 http://schemas."
"opengis.net/gml/3.2.1/gml.xsd\n"
"                        http://www.opengis.net/wfs/2.0 http://schemas."
"opengis.net/wfs/2.0/wfs.xsd\">\n"
"  <wfs:member>\n"
"    <wfs:Tuple>\n"
"      <wfs:member>\n"
"        <app:table1 gml:id=\"table1-1\">\n"
"          <app:foo>1</app:foo>\n"
"        </app:table1>\n"
"      </wfs:member>\n"
"      <wfs:member>\n"
"        <app:table2 gml:id=\"table2-1\">\n"
"          <app:bar>2</app:bar>\n"
"          <app:baz>foo</app:baz>\n"
"          <app:geometry><gml:Point gml:id=\"table2-2.geom.0\"><gml:pos>2 49</"
"gml:pos></gml:Point></app:geometry>\n"
"        </app:table2>\n"
"      </wfs:member>\n"
"    </wfs:Tuple>\n"
"  </wfs:member>\n"
"  <wfs:member>\n"
"    <wfs:Tuple>\n"
"      <wfs:member>\n"
"        <app:table1 gml:id=\"table1-2\">\n"
"          <app:bar>2</app:bar>\n"
"          <app:geometry><gml:Point gml:id=\"table1-1.geom.0\"><gml:pos>3 50</"
"gml:pos></gml:Point></app:geometry>\n"
"        </app:table1>\n"
"      </wfs:member>\n"
"      <wfs:member>\n"
"        <app:table2 gml:id=\"table2-2\">\n"
"          <app:bar>2</app:bar>\n"
"          <app:baz>bar</app:baz>\n"
"          <app:geometry><gml:Point gml:id=\"table2-2.geom.0\"><gml:pos>2 50</"
"gml:pos></gml:Point></app:geometry>\n"
"        </app:table2>\n"
"      </wfs:member>\n"
"    </wfs:Tuple>\n"
"  </wfs:member>\n"
"</wfs:FeatureCollection>"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:1279
msgid ""
"OGR will group together the attributes from the layers participating to the "
"join and will prefix them with the layer name. So the above example will be "
"read as the following:"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:1285
msgid ""
"OGRFeature(join_table1_table2):0\n"
"  table1.gml_id (String) = table1-1\n"
"  table1.foo (Integer) = 1\n"
"  table1.bar (Integer) = (null)\n"
"  table2.gml_id (String) = table2-1\n"
"  table2.bar (Integer) = 2\n"
"  table2.baz (String) = foo\n"
"  table2.geometry = POINT (2 49)\n"
"\n"
"OGRFeature(join_table1_table2):1\n"
"  table1.gml_id (String) = table1-2\n"
"  table1.foo (Integer) = (null)\n"
"  table1.bar (Integer) = 2\n"
"  table2.gml_id (String) = table2-2\n"
"  table2.bar (Integer) = 2\n"
"  table2.baz (String) = bar\n"
"  table1.geometry = POINT (3 50)\n"
"  table2.geometry = POINT (2 50)"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:1305
msgid "Geometry coordinate precision"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:1307
msgid "3.9"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:1309
msgid ""
"The GML driver supports reading and writing the geometry coordinate "
"precision, using the :cpp:class:`OGRGeomCoordinatePrecision` settings of "
"the :cpp:class:`OGRGeomFieldDefn`. Those settings are used to round the "
"coordinates of the geometry of the features to an appropriate decimal "
"precision."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:1314
msgid ""
"Implementation details: the coordinate precision is stored in the XML schema "
"as ``xs:annotation/xs:appinfo[source=\"http://ogr.maptools.org/\"]/ogr:"
"xy_coordinate_resolution`` and ``xs:annotation/xs:appinfo[source=\"http://"
"ogr.maptools.org/\"]/ogr:z_coordinate_resolution`` optional elements in the "
"declaration of the geometry column. Their numeric value is expressed in the "
"units of the SRS."
msgstr ""

#: ../../../source/drivers/vector/gml.rst:1320
msgid "Example:"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:1322
msgid ""
"<xs:element name=\"my_geom\" type=\"gml:SurfacePropertyType\" "
"nillable=\"true\" minOccurs=\"0\" maxOccurs=\"1\">\n"
"  <xs:annotation>\n"
"    <xs:appinfo source=\"http://ogr.maptools.org/\">\n"
"      <ogr:xy_coordinate_resolution>8.9e-8</ogr:xy_coordinate_resolution>\n"
"      <ogr:z_coordinate_resolution>1e-3</ogr:z_coordinate_resolution>\n"
"    </xs:appinfo>\n"
"  </xs:annotation>\n"
"</xs:element>"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:1334
msgid "Examples"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:1336
msgid ""
"The ogr2ogr utility can be used to dump the results of a Oracle query to GML:"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:1341
msgid "ogr2ogr -f GML output.gml OCI:usr/pwd@db my_feature -where \"id = 0\""
msgstr ""

#: ../../../source/drivers/vector/gml.rst:1343
msgid ""
"The ogr2ogr utility can be used to dump the results of a PostGIS query to "
"GML:"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:1348
msgid ""
"ogr2ogr -f GML output.gml PG:'host=myserver dbname=warmerda' -sql \"SELECT "
"pop_1994 from canada where province_name = 'Alberta'\""
msgstr ""

#: ../../../source/drivers/vector/gml.rst:1351
msgid "See Also"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:1353
msgid "`GML Specifications <http://www.opengeospatial.org/standards/gml>`__"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:1354
msgid ""
"`GML 3.1.1 simple features profile - OGC(R) 06-049r1 <http://portal."
"opengeospatial.org/files/?artifact_id=15201>`__"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:1356
msgid ""
"`Geography Markup Language (GML) simple features profile (with Corrigendum) "
"(GML 3.2.1) - OGC(R) 10-100r3 <https://portal.opengeospatial.org/files/?"
"artifact_id=42729>`__"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:1359
msgid "`Xerces <http://xml.apache.org/xerces2-j/index.html>`__"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:1360
msgid ""
":ref:`GMLAS - Geography Markup Language (GML) driven by application schemas "
"<vector.gmlas>`"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:1362
msgid ""
":ref:`NAS/ALKIS : specialized GML driver for cadastral data in Germany "
"<vector.nas>`"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:1366
msgid "Credits"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:1368
msgid ""
"Implementation for :config:`GML_SKIP_RESOLVE_ELEMS=HUGE` was contributed by "
"A.Furieri, with funding from Regione Toscana"
msgstr ""

#: ../../../source/drivers/vector/gml.rst:1370
msgid ""
"Support for cadastral data in Finnish National Land Survey GML and Inspire "
"GML was funded by The Information Centre of the Ministry of Agriculture and "
"Forestry (Tike)"
msgstr ""
