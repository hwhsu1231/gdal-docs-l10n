# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1998-2024
# This file is distributed under the same license as the GDAL package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GDAL master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-04-22 19:28+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../source/drivers/raster/jp2openjpeg.rst:5
msgid "JP2OpenJPEG -- JPEG2000 driver based on OpenJPEG library"
msgstr ""

#: ../../../source/drivers/raster/jp2openjpeg.rst:-1
msgid "Driver short name"
msgstr ""

#: ../../../source/drivers/raster/jp2openjpeg.rst:7
msgid "JP2OpenJPEG"
msgstr ""

#: ../../../source/drivers/raster/jp2openjpeg.rst:-1
msgid "Build dependencies"
msgstr ""

#: ../../../source/drivers/raster/jp2openjpeg.rst:9
msgid "openjpeg >= 2.1"
msgstr ""

#: ../../../source/drivers/raster/jp2openjpeg.rst:12
msgid ""
"This driver is an implementation of a JPEG2000 reader/writer based on "
"OpenJPEG library **v2**."
msgstr ""

#: ../../../source/drivers/raster/jp2openjpeg.rst:15
msgid ""
"The driver uses the VSI Virtual File API, so it can read JPEG2000 compressed "
"NITF files."
msgstr ""

#: ../../../source/drivers/raster/jp2openjpeg.rst:18
msgid ""
"XMP metadata can be extracted from JPEG2000 files, and will be stored as XML "
"raw content in the xml:XMP metadata domain."
msgstr ""

#: ../../../source/drivers/raster/jp2openjpeg.rst:21
msgid ""
"The driver supports writing georeferencing information as GeoJP2 and GMLJP2 "
"boxes."
msgstr ""

#: ../../../source/drivers/raster/jp2openjpeg.rst:24
msgid ""
"The driver supports creating files with transparency, arbitrary band count, "
"and adding/reading metadata. Update of georeferencing or metadata of "
"existing file is also supported. Optional intellectual property metadata can "
"be read/written in the xml:IPR box."
msgstr ""

#: ../../../source/drivers/raster/jp2openjpeg.rst:31
msgid "Driver capabilities"
msgstr ""

#: ../../../source/drivers/raster/jp2openjpeg.rst:40
msgid "Georeferencing"
msgstr ""

#: ../../../source/drivers/raster/jp2openjpeg.rst:42
msgid ""
"Georeferencing information can come from different sources : internal "
"(GeoJP2 or GMLJP2 boxes), worldfile .j2w/.wld sidecar files, or PAM "
"(Persistent Auxiliary metadata) .aux.xml sidecar files. By default, "
"information is fetched in following order (first listed is the most "
"prioritary): PAM, GeoJP2, GMLJP2, WORLDFILE."
msgstr ""

#: ../../../source/drivers/raster/jp2openjpeg.rst:48
msgid ""
"Starting with GDAL 2.2, the allowed sources and their priority order can be "
"changed with the :config:`GDAL_GEOREF_SOURCES` configuration option (or :oo:"
"`GEOREF_SOURCES` open option) whose value is a comma-separated list of the "
"following keywords : PAM, GEOJP2, GMLJP2, INTERNAL (shortcut for GEOJP2,"
"GMLJP2), WORLDFILE, NONE. First mentioned sources are the most prioritary "
"over the next ones. A non mentioned source will be ignored."
msgstr ""

#: ../../../source/drivers/raster/jp2openjpeg.rst:55
msgid ""
"For example setting it to \"WORLDFILE,PAM,INTERNAL\" will make a "
"geotransformation matrix from a potential worldfile prioritary over PAM or "
"internal JP2 boxes. Setting it to \"PAM,WORLDFILE,GEOJP2\" will use the "
"mentioned sources and ignore GMLJP2 boxes."
msgstr ""

#: ../../../source/drivers/raster/jp2openjpeg.rst:61
msgid "Thread support"
msgstr ""

#: ../../../source/drivers/raster/jp2openjpeg.rst:63
msgid ""
"By default, if the JPEG2000 file has internal tiling, GDAL will try to "
"decode several tiles in multiple threads if the RasterIO() request it "
"receives intersect several tiles. This behavior can be controlled with the :"
"config:`GDAL_NUM_THREADS` configuration option that defaults to ALL_CPUS in "
"that context. In case RAM is limited, it can be needed to set this "
"configuration option to 1 to disable multi-threading"
msgstr ""

#: ../../../source/drivers/raster/jp2openjpeg.rst:70
msgid ""
"Starting with OpenJPEG 2.2.0, multi-threaded decoding can also be enabled at "
"the code-block level. This must be enabled with the OPJ_NUM_THREADS "
"environment variable (note: this is a system environment variable, not a "
"GDAL configuration option), which can be set to a numeric value or NUM_CPUS. "
"Its default value is 1. Starting with GDAL 2.3, this multi-threading at code-"
"block level is automatically enabled by GDAL. Starting with GDAL 3.0.1 and "
"OpenJPEG 2.3.2, multi-threaded encoding is automatically enabled and can be "
"controlled with the OPJ_NUM_THREADS environment variable or the :config:"
"`GDAL_NUM_THREADS` configuration option."
msgstr ""

#: ../../../source/drivers/raster/jp2openjpeg.rst:81
msgid "Both multi-threading mechanism can be combined together."
msgstr ""

#: ../../../source/drivers/raster/jp2openjpeg.rst:84
msgid "Open Options"
msgstr ""

#: ../../../source/drivers/raster/jp2openjpeg.rst:86
msgid "The following open options are available:"
msgstr ""

#: ../../../source/drivers/raster/jp2openjpeg.rst:122
msgid "Creation Options"
msgstr ""

#: ../../../source/drivers/raster/jp2openjpeg.rst:350
msgid ""
"(OpenJPEG >= 2.3.0) Style of the code-block coding passes. The following 6 "
"independent settings can be combined together (values should be comma "
"separated):"
msgstr ""

#: ../../../source/drivers/raster/jp2openjpeg.rst:354
msgid ""
"*BYPASS* (1): enable selective arithmetic coding bypass (can substantially "
"improve coding/decoding speed, at the expense of larger file size)"
msgstr ""

#: ../../../source/drivers/raster/jp2openjpeg.rst:357
msgid "*RESET* (2): reset context probabilities on coding pass boundaries"
msgstr ""

#: ../../../source/drivers/raster/jp2openjpeg.rst:358
msgid "*TERMALL* (4): enable termination on each coding pass"
msgstr ""

#: ../../../source/drivers/raster/jp2openjpeg.rst:359
msgid "*VSC* (8): enable vertically causal context"
msgstr ""

#: ../../../source/drivers/raster/jp2openjpeg.rst:360
msgid ""
"*PREDICTABLE* (16): enable predictable termination (helps for error "
"detection)"
msgstr ""

#: ../../../source/drivers/raster/jp2openjpeg.rst:362
msgid "*SEGSYM* (32): enable segmentation symbols (helps for error detection)"
msgstr ""

#: ../../../source/drivers/raster/jp2openjpeg.rst:365
msgid ""
"Instead of specifying them by text, it is also possible to give the "
"corresponding numeric value of the global codeblock style, by adding the "
"selected options (for example \"BYPASS,TERMALL\" is equivalent to \"5\"=1+4)"
msgstr ""

#: ../../../source/drivers/raster/jp2openjpeg.rst:370
msgid ""
"By default, none of them are enabled. Enabling them will generally increase "
"codestream size, but improve either coding/decoding speed or resilience/"
"error detection."
msgstr ""

#: ../../../source/drivers/raster/jp2openjpeg.rst:400
msgid ""
"<GDALMultiDomainMetadata>\n"
"  <Metadata>\n"
"    <MDI key=\"foo\">bar</MDI>\n"
"  </Metadata>\n"
"  <Metadata domain='aux_domain'>\n"
"    <MDI key=\"foo\">bar</MDI>\n"
"  </Metadata>\n"
"  <Metadata domain='a_xml_domain' format='xml'>\n"
"    <arbitrary_xml_content>\n"
"    </arbitrary_xml_content>\n"
"  </Metadata>\n"
"</GDALMultiDomainMetadata>"
msgstr ""

#: ../../../source/drivers/raster/jp2openjpeg.rst:413
msgid ""
"If there are metadata domain whose name starts with \"xml:BOX\\_\", they "
"will be written each as separate JP2 'xml ' box."
msgstr ""

#: ../../../source/drivers/raster/jp2openjpeg.rst:416
msgid ""
"If there is a metadata domain whose name is \"xml:XMP\", its content will be "
"written as a JP2 'uuid' XMP box."
msgstr ""

#: ../../../source/drivers/raster/jp2openjpeg.rst:419
msgid ""
"If there is a metadata domain whose name is \"xml:IPR\", its content will be "
"written as a JP2 'jp2i' box."
msgstr ""

#: ../../../source/drivers/raster/jp2openjpeg.rst:446
msgid "Lossless compression"
msgstr ""

#: ../../../source/drivers/raster/jp2openjpeg.rst:448
msgid ""
"Lossless compression can be achieved if ALL the following creation options "
"are defined :"
msgstr ""

#: ../../../source/drivers/raster/jp2openjpeg.rst:451
msgid ":co:`QUALITY=100`"
msgstr ""

#: ../../../source/drivers/raster/jp2openjpeg.rst:452
msgid ":co:`REVERSIBLE=YES`"
msgstr ""

#: ../../../source/drivers/raster/jp2openjpeg.rst:453
msgid ":co:`YCBCR420=NO` (which is the default)"
msgstr ""

#: ../../../source/drivers/raster/jp2openjpeg.rst:458
msgid "GMLJP2v2 definition file"
msgstr ""

#: ../../../source/drivers/raster/jp2openjpeg.rst:460
msgid ""
"A GMLJP2v2 box typically contains a GMLJP2RectifiedGridCoverage with the SRS "
"information and geotransformation matrix. It is also possible to add "
"metadata, vector features (GML feature collections), annotations (KML), "
"styles (typically SLD, or other XML format) or any XML content as an "
"extension. The value of the GMLJP2V2_DEF creation option should be a file "
"that conforms with the below syntax (elements starting with \"#\" are "
"documentation, and can be omitted):"
msgstr ""

#: ../../../source/drivers/raster/jp2openjpeg.rst:468
msgid ""
"{\n"
"    \"#doc\" : \"Unless otherwise specified, all elements are optional\",\n"
"\n"
"    \"#root_instance_doc\": \"Describe content of the "
"GMLJP2CoverageCollection\",\n"
"    \"root_instance\": {\n"
"        \"#gml_id_doc\": \"Specify GMLJP2CoverageCollection gml:id. Default "
"is ID_GMLJP2_0\",\n"
"        \"gml_id\": \"some_gml_id\",\n"
"\n"
"        \"#grid_coverage_file_doc\": [\n"
"            \"External XML file, whose root might be a GMLJP2GridCoverage, "
"\",\n"
"            \"GMLJP2RectifiedGridCoverage or a "
"GMLJP2ReferenceableGridCoverage.\",\n"
"            \"If not specified, GDAL will auto-generate a "
"GMLJP2RectifiedGridCoverage\" ],\n"
"        \"grid_coverage_file\": \"gmljp2gridcoverage.xml\",\n"
"\n"
"        \"#grid_coverage_range_type_field_predefined_name_doc\": [\n"
"            \"New in GDAL 2.2\",\n"
"            \"One of Color, Elevation_meter or Panchromatic \",\n"
"            \"to fill gmlcov:rangeType/swe:DataRecord/swe:field\",\n"
"            \"Only used if grid_coverage_file is not defined.\",\n"
"            \"Exclusive with grid_coverage_range_type_file\" ],\n"
"        \"grid_coverage_range_type_field_predefined_name\": \"Color\",\n"
"\n"
"        \"#grid_coverage_range_type_file_doc\": [\n"
"            \"New in GDAL 2.2\",\n"
"            \"File that is XML content to put under gml:RectifiedGrid/gmlcov:"
"rangeType\",\n"
"            \"Only used if grid_coverage_file is not defined.\",\n"
"            \"Exclusive with "
"grid_coverage_range_type_field_predefined_name\" ],\n"
"        \"grid_coverage_range_type_file\": \"grid_coverage_range_type."
"xml\",\n"
"\n"
"        \"#crs_url_doc\": [\n"
"            \"true for http://www.opengis.net/def/crs/EPSG/0/XXXX CRS URL."
"\",\n"
"            \"If false, use CRS URN. Default value is true\",\n"
"            \"Only taken into account for a auto-generated "
"GMLJP2RectifiedGridCoverage\"],\n"
"        \"crs_url\": true,\n"
"\n"
"        \"#metadata_doc\": [ \"An array of metadata items. Can be either "
"strings, with \",\n"
"                           \"a filename or directly inline XML content, or "
"either \",\n"
"                           \"a more complete description.\" ],\n"
"        \"metadata\": [\n"
"\n"
"            \"dcmetadata.xml\",\n"
"\n"
"            {\n"
"                \"#file_doc\": \"Can use relative or absolute paths. "
"Exclusive of content, gdal_metadata and generated_metadata.\",\n"
"                \"file\": \"dcmetadata.xml\",\n"
"\n"
"                \"#gdal_metadata_doc\": \"Whether to serialize GDAL metadata "
"as GDALMultiDomainMetadata\",\n"
"                \"gdal_metadata\": false,\n"
"\n"
"                \"#dynamic_metadata_doc\":\n"
"                    [ \"The metadata file will be generated from a template "
"and a source file.\",\n"
"                      \"The template is a valid GMLJP2 metadata XML tree "
"with placeholders like\",\n"
"                      \"{{{XPATH(some_xpath_expression)}}}\",\n"
"                      \"that are evaluated from the source XML file. Typical "
"use case\",\n"
"                      \"is to generate a gmljp2:eopMetadata from the XML "
"metadata\",\n"
"                      \"provided by the image provider in their own "
"particular format.\" ],\n"
"                \"dynamic_metadata\" :\n"
"                {\n"
"                    \"template\": \"my_template.xml\",\n"
"                    \"source\": \"my_source.xml\"\n"
"                },\n"
"\n"
"                \"#content\": \"Exclusive of file. Inline XML metadata "
"content\",\n"
"                \"content\": \"<gmljp2:metadata>Some simple textual "
"metadata</gmljp2:metadata>\",\n"
"\n"
"                \"#parent_node\": [\"Where to put the metadata.\",\n"
"                                 \"Under CoverageCollection (default) or "
"GridCoverage\" ],\n"
"                \"parent_node\": \"CoverageCollection\"\n"
"            }\n"
"        ],\n"
"\n"
"        \"#annotations_doc\": [ \"An array of filenames, either directly KML "
"files\",\n"
"                              \"or other vector files recognized by GDAL "
"that \",\n"
"                              \"will be translated on-the-fly as KML\" ],\n"
"        \"annotations\": [\n"
"            \"my.kml\"\n"
"        ],\n"
"\n"
"        \"#gml_filelist_doc\" :[\n"
"            \"An array of GML files or vector files that will be on-the-fly "
"converted\",\n"
"            \"to GML 3.2. Can be either GML filenames (or other OGR "
"datasource names), \",\n"
"            \"or a more complete description\" ],\n"
"        \"gml_filelist\": [\n"
"\n"
"            \"my.gml\",\n"
"\n"
"            \"my.shp\",\n"
"\n"
"            {\n"
"                \"#file_doc\": \"OGR datasource. Can use relative or "
"absolute paths. Exclusive of remote_resource\",\n"
"                \"file\": \"converted/test_0.gml\",\n"
"\n"
"                \"#remote_resource_doc\": \"URL of a feature collection that "
"must be referenced through a xlink:href\",\n"
"                \"remote_resource\": \"https://github.com/OSGeo/gdal/blob/"
"master/autotest/ogr/data/expected_gml_gml32.gml\",\n"
"\n"
"                \"#namespace_doc\": [\"The namespace in schemaLocation for "
"which to substitute\",\n"
"                                  \"its original schemaLocation with the one "
"provided below.\",\n"
"                                  \"Ignored for a remote_resource\"],\n"
"                \"namespace\": \"http://example.com\",\n"
"\n"
"                \"#schema_location_doc\": [\"Value of the substituted "
"schemaLocation. \",\n"
"                                         \"Typically a schema box label "
"(link)\",\n"
"                                         \"Ignored for a "
"remote_resource\"],\n"
"                \"schema_location\": \"gmljp2://xml/schema_0.xsd\",\n"
"\n"
"                \"#inline_doc\": [\n"
"                    \"Whether to inline the content, or put it in a separate "
"xml box. Default is true\",\n"
"                    \"Ignored for a remote_resource.\" ],\n"
"                \"inline\": true,\n"
"\n"
"                \"#parent_node\": [\"Where to put the FeatureCollection.\",\n"
"                                 \"Under CoverageCollection (default) or "
"GridCoverage\" ],\n"
"                \"parent_node\": \"CoverageCollection\"\n"
"            }\n"
"        ],\n"
"\n"
"\n"
"        \"#styles_doc\": [ \"An array of styles. For example SLD files\" ],\n"
"        \"styles\" : [\n"
"            {\n"
"                \"#file_doc\": \"Can use relative or absolute paths.\",\n"
"                \"file\": \"my.sld\",\n"
"\n"
"                \"#parent_node\": [\"Where to put the FeatureCollection.\",\n"
"                                 \"Under CoverageCollection (default) or "
"GridCoverage\" ],\n"
"                \"parent_node\": \"CoverageCollection\"\n"
"            }\n"
"        ],\n"
"\n"
"        \"#extensions_doc\": [ \"An array of extensions.\" ],\n"
"        \"extensions\" : [\n"
"            {\n"
"                \"#file_doc\": \"Can use relative or absolute paths.\",\n"
"                \"file\": \"my.xml\",\n"
"\n"
"                \"#parent_node\": [\"Where to put the FeatureCollection.\",\n"
"                                 \"Under CoverageCollection (default) or "
"GridCoverage\" ],\n"
"                \"parent_node\": \"CoverageCollection\"\n"
"            }\n"
"        ]\n"
"    },\n"
"\n"
"    \"#boxes_doc\": \"An array to describe the content of XML asoc boxes\",\n"
"    \"boxes\": [\n"
"        {\n"
"            \"#file_doc\": \"can use relative or absolute paths. "
"Required\",\n"
"            \"file\": \"converted/test_0.xsd\",\n"
"\n"
"            \"#label_doc\": [\"the label of the XML box. If not specified, "
"will be the \",\n"
"                          \"filename without the directory part.\" ],\n"
"            \"label\": \"schema_0.xsd\"\n"
"        }\n"
"    ]\n"
"}"
msgstr ""

#: ../../../source/drivers/raster/jp2openjpeg.rst:625
msgid ""
"Metadata can be dynamically generated from a template file (in that context, "
"with a XML structure) and a XML source file. The template file is processed "
"by searching for patterns like {{{XPATH(xpath_expr)}}} and replacing them by "
"their evaluation against the content of the source file. xpath_expr must be "
"a XPath 1.0 compatible expression, with the addition of the following "
"functions :"
msgstr ""

#: ../../../source/drivers/raster/jp2openjpeg.rst:632
msgid ""
"**if(cond_expr,expr_if_true,expr_if_false)**: if cond_expr evaluates to "
"true, returns expr_if_true. Otherwise returns expr_if_false"
msgstr ""

#: ../../../source/drivers/raster/jp2openjpeg.rst:634
msgid "**uuid()**: evaluates to a random UUID"
msgstr ""

#: ../../../source/drivers/raster/jp2openjpeg.rst:636
msgid ""
"A template file to process XML metadata of Pleiades imagery can be found "
"`here <eoptemplate_pleiades.xml>`__, and a template file to process XML "
"metadata of GeoEye/WorldView imagery can be found `here "
"<eoptemplate_worldviewgeoeye.xml>`__."
msgstr ""

#: ../../../source/drivers/raster/jp2openjpeg.rst:642
msgid "Vector information"
msgstr ""

#: ../../../source/drivers/raster/jp2openjpeg.rst:644
msgid ""
"A JPEG2000 file containing a GMLJP2 v2 box with GML feature collections and/"
"or KML annotations embedded can be opened as a vector file with the OGR API. "
"For example:"
msgstr ""

#: ../../../source/drivers/raster/jp2openjpeg.rst:650
msgid ""
"ogrinfo -ro my.jp2\n"
"\n"
"INFO: Open of my.jp2'\n"
"      using driver `JP2OpenJPEG' successful.\n"
"1: FC_GridCoverage_1_rivers (LineString)\n"
"2: FC_GridCoverage_1_borders (LineString)\n"
"3: Annotation_1_poly"
msgstr ""

#: ../../../source/drivers/raster/jp2openjpeg.rst:658
msgid ""
"Feature collections can be linked from the GMLJP2 v2 box to a remote "
"location. By default, the link is not followed. It will be followed if the "
"open option OPEN_REMOTE_GML is set to YES."
msgstr ""

#: ../../../source/drivers/raster/jp2openjpeg.rst:663
msgid "See Also"
msgstr ""

#: ../../../source/drivers/raster/jp2openjpeg.rst:665
msgid "Implemented as :source_file:`frmts/openjpeg/openjpegdataset.cpp`."
msgstr ""

#: ../../../source/drivers/raster/jp2openjpeg.rst:667
msgid "`Official JPEG-2000 page <http://www.jpeg.org/jpeg2000/index.html>`__"
msgstr ""

#: ../../../source/drivers/raster/jp2openjpeg.rst:669
msgid ""
"`The OpenJPEG library home page <https://github.com/uclouvain/openjpeg>`__"
msgstr ""

#: ../../../source/drivers/raster/jp2openjpeg.rst:672
msgid ""
"`OGC GML in JPEG2000, version 2.0 <http://docs.opengeospatial.org/"
"is/08-085r4/08-085r4.html>`__ (GDAL 2.0 and 2.1)"
msgstr ""

#: ../../../source/drivers/raster/jp2openjpeg.rst:676
msgid ""
"`OGC GML in JPEG2000, version 2.0.1 <http://docs.opengeospatial.org/"
"is/08-085r5/08-085r5.html>`__ (GDAL 2.2 and above)"
msgstr ""

#: ../../../source/drivers/raster/jp2openjpeg.rst:680
msgid ""
"`Inspire Data Specification on Orthoimagery - Technical Guidelines <http://"
"inspire.ec.europa.eu/documents/Data_Specifications/"
"INSPIRE_DataSpecification_OI_v3.0.pdf>`__"
msgstr ""

#: ../../../source/drivers/raster/jp2openjpeg.rst:683
msgid "Other JPEG2000 GDAL drivers :"
msgstr ""

#: ../../../source/drivers/raster/jp2openjpeg.rst:685
msgid ":ref:`JP2ECW: based on Erdas ECW library (proprietary) <raster.jp2ecw>`"
msgstr ""

#: ../../../source/drivers/raster/jp2openjpeg.rst:688
msgid ""
":ref:`JP2MRSID: based on LizardTech MrSID library (proprietary) <raster."
"jp2mrsid>`"
msgstr ""

#: ../../../source/drivers/raster/jp2openjpeg.rst:691
msgid ":ref:`JP2KAK: based on Kakadu library (proprietary) <raster.jp2kak>`"
msgstr ""
