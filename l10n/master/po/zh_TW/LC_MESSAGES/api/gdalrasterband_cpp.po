# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1998-2024
# This file is distributed under the same license as the GDAL package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GDAL master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-06-26 10:24+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../source/api/gdalrasterband_cpp.rst:10
msgid "GDALRasterBand C++ API"
msgstr ""

#: ../../../source/api/gdalrasterband_cpp.rst:0
msgid "Public Functions"
msgstr ""

#: ../../../source/api/gdalrasterband_cpp.rst:0
msgid "Parameters"
msgstr ""

#: ../../../source/api/gdalrasterband_cpp.rst:0
msgid "Returns"
msgstr ""

#: ../../../source/api/gdalrasterband_cpp.rst:-1
msgid ""
"CPLErr GetHistogram( GDALRasterBand *poBand, GUIntBig *panHistogram )\n"
"\n"
"{\n"
"    memset( panHistogram, 0, sizeof(GUIntBig) * 256 );\n"
"\n"
"    CPLAssert( poBand->GetRasterDataType() == GDT_Byte );\n"
"\n"
"    int nXBlockSize, nYBlockSize;\n"
"\n"
"    poBand->GetBlockSize( &nXBlockSize, &nYBlockSize );\n"
"    int nXBlocks = (poBand->GetXSize() + nXBlockSize - 1) / nXBlockSize;\n"
"    int nYBlocks = (poBand->GetYSize() + nYBlockSize - 1) / nYBlockSize;\n"
"\n"
"    GByte *pabyData = (GByte *) CPLMalloc(nXBlockSize * nYBlockSize);\n"
"\n"
"    for( int iYBlock = 0; iYBlock < nYBlocks; iYBlock++ )\n"
"    {\n"
"        for( int iXBlock = 0; iXBlock < nXBlocks; iXBlock++ )\n"
"        {\n"
"            int        nXValid, nYValid;\n"
"\n"
"            poBand->ReadBlock( iXBlock, iYBlock, pabyData );\n"
"\n"
"            // Compute the portion of the block that is valid\n"
"            // for partial edge blocks.\n"
"            poBand->GetActualBlockSize(iXBlock, iYBlock, &nXValid, "
"&nYValid)\n"
"\n"
"            // Collect the histogram counts.\n"
"            for( int iY = 0; iY < nYValid; iY++ )\n"
"            {\n"
"                for( int iX = 0; iX < nXValid; iX++ )\n"
"                {\n"
"                    panHistogram[pabyData[iX + iY * nXBlockSize]] += 1;\n"
"                }\n"
"            }\n"
"        }\n"
"    }\n"
"}"
msgstr ""

#: ../../../source/api/gdalrasterband_cpp.rst:-1
msgid ""
"GUIntBig anHistogram[256];\n"
"\n"
"poBand->GetHistogram( -0.5, 255.5, 256, anHistogram, FALSE, FALSE,\n"
"                      GDALDummyProgress, nullptr );"
msgstr ""

#: ../../../source/api/gdalrasterband_cpp.rst:0
msgid "Public Static Functions"
msgstr ""

#: ../../../source/api/gdalrasterband_cpp.rst:0
msgid "Protected Functions"
msgstr ""
