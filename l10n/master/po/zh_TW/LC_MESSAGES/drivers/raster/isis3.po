# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1998-2024
# This file is distributed under the same license as the GDAL package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GDAL master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-06-26 10:24+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../source/drivers/raster/isis3.rst:5
msgid "ISIS3 -- USGS Astrogeology ISIS Cube (Version 3)"
msgstr ""

#: ../../../source/drivers/raster/isis3.rst:-1
msgid "Driver short name"
msgstr ""

#: ../../../source/drivers/raster/isis3.rst:7
msgid "ISIS3"
msgstr ""

#: ../../../source/drivers/raster/isis3.rst:11
msgid ""
"ISIS3 is a format used by the USGS Planetary Cartography group to store and "
"distribute planetary imagery data. GDAL provides read/creation/update access "
"to ISIS3 formatted imagery data."
msgstr ""

#: ../../../source/drivers/raster/isis3.rst:15
msgid ""
"ISIS3 files often have the extension .cub, sometimes with an associated .lbl "
"(label) file. When a .lbl file exists it should be used as the dataset name "
"rather than the .cub file. Since GDAL 2.2, the driver also supports imagery "
"stored in a separate GeoTIFF file."
msgstr ""

#: ../../../source/drivers/raster/isis3.rst:20
msgid ""
"In addition to support for most ISIS3 imagery configurations, this driver "
"also reads georeferencing and coordinate system information as well as "
"selected other header metadata."
msgstr ""

#: ../../../source/drivers/raster/isis3.rst:24
msgid ""
"Starting with GDAL 2.2, a mask band is attached to each source band. The "
"value of this mask band is 0 when the pixel value is the NULL value or one "
"of the low/high on-intstrument/processed saturation value, or 255 when the "
"pixel value is valid."
msgstr ""

#: ../../../source/drivers/raster/isis3.rst:29
msgid ""
"Implementation of this driver was supported by the United States Geological "
"Survey."
msgstr ""

#: ../../../source/drivers/raster/isis3.rst:32
msgid "ISIS3 is part of a family of related formats including PDS and ISIS2."
msgstr ""

#: ../../../source/drivers/raster/isis3.rst:35
msgid "Driver capabilities"
msgstr ""

#: ../../../source/drivers/raster/isis3.rst:46
msgid "Metadata"
msgstr ""

#: ../../../source/drivers/raster/isis3.rst:48
msgid ""
"Starting with GDAL 2.2, the ISIS3 label can be retrieved as JSON-serialized "
"content in the json:ISIS3 metadata domain."
msgstr ""

#: ../../../source/drivers/raster/isis3.rst:51
msgid "For example:"
msgstr ""

#: ../../../source/drivers/raster/isis3.rst:55
msgid ""
"$ python 3\n"
"from osgeo import gdal\n"
"ds = gdal.Open('../autotest/gdrivers/data/isis3_detached.lbl')\n"
"print(ds.GetMetadata_List('json:ISIS3')[0])\n"
"{\n"
"  \"IsisCube\":{\n"
"    \"_type\":\"object\",\n"
"    \"Core\":{\n"
"      \"_type\":\"object\",\n"
"      \"StartByte\":1,\n"
"      \"^Core\":\"isis3_detached.cub\",\n"
"      \"Format\":\"BandSequential\",\n"
"      \"Dimensions\":{\n"
"        \"_type\":\"group\",\n"
"        \"Samples\":317,\n"
"        \"Lines\":30,\n"
"        \"Bands\":1\n"
"      },\n"
"      \"Pixels\":{\n"
"        \"_type\":\"group\",\n"
"        \"Type\":\"UnsignedByte\",\n"
"        \"ByteOrder\":\"Lsb\",\n"
"        \"Base\":0.000000,\n"
"        \"Multiplier\":1.000000\n"
"      }\n"
"    },\n"
"    \"Instrument\":{\n"
"      \"_type\":\"group\",\n"
"      \"TargetName\":\"Mars\"\n"
"    },\n"
"    \"BandBin\":{\n"
"      \"_type\":\"group\",\n"
"      \"Center\":1.000000,\n"
"      \"OriginalBand\":1\n"
"    },\n"
"    \"Mapping\":{\n"
"      \"_type\":\"group\",\n"
"      \"ProjectionName\":\"Equirectangular\",\n"
"      \"CenterLongitude\":184.412994,\n"
"      \"TargetName\":\"Mars\",\n"
"      \"EquatorialRadius\":{\n"
"        \"value\":3396190.000000,\n"
"        \"unit\":\"meters\"\n"
"      },\n"
"      \"PolarRadius\":{\n"
"        \"value\":3376200.000000,\n"
"        \"unit\":\"meters\"\n"
"      },\n"
"      \"LatitudeType\":\"Planetographic\",\n"
"      \"LongitudeDirection\":\"PositiveWest\",\n"
"      \"LongitudeDomain\":360,\n"
"      \"MinimumLatitude\":-14.822815,\n"
"      \"MaximumLatitude\":-14.727503,\n"
"      \"MinimumLongitude\":184.441132,\n"
"      \"MaximumLongitude\":184.496521,\n"
"      \"UpperLeftCornerX\":-4766.964984,\n"
"      \"UpperLeftCornerY\":-872623.628822,\n"
"      \"PixelResolution\":{\n"
"        \"value\":10.102500,\n"
"        \"unit\":\"meters\\/pixel\"\n"
"      },\n"
"      \"Scale\":{\n"
"        \"value\":5864.945312,\n"
"        \"unit\":\"pixels\\/degree\"\n"
"      },\n"
"      \"CenterLatitude\":-15.147000,\n"
"      \"CenterLatitudeRadius\":3394813.857978\n"
"    }\n"
"  },\n"
"  \"Label\":{\n"
"    \"_type\":\"object\",\n"
"    \"Bytes\":65536,\n"
"  },\n"
"  \"History\":{\n"
"    \"_type\":\"object\",\n"
"    \"Name\":\"IsisCube\",\n"
"    \"StartByte\":1,\n"
"    \"Bytes\":957,\n"
"    \"^History\":\"r0200357_10m_Jul20_o_i3_detatched.History.IsisCube\"\n"
"  },\n"
"  \"OriginalLabel\":{\n"
"    \"_type\":\"object\",\n"
"    \"Name\":\"IsisCube\",\n"
"    \"StartByte\":1,\n"
"    \"Bytes\":2482,\n"
"    \"^OriginalLabel\":\"r0200357_10m_Jul20_o_i3_detatched.OriginalLabel."
"IsisCube\"\n"
"  }\n"
"}"
msgstr ""

#: ../../../source/drivers/raster/isis3.rst:144
msgid "or"
msgstr ""

#: ../../../source/drivers/raster/isis3.rst:148
msgid "$ gdalinfo -json ../autotest/gdrivers/data/isis3_detached.lbl -mdd all"
msgstr ""

#: ../../../source/drivers/raster/isis3.rst:150
msgid ""
"On creation, a source template label can be passed to the SetMetadata() "
"interface in the \"json:ISIS3\" metadata domain."
msgstr ""

#: ../../../source/drivers/raster/isis3.rst:154
msgid "Creation support"
msgstr ""

#: ../../../source/drivers/raster/isis3.rst:156
msgid ""
"Starting with GDAL 2.2, the ISIS3 driver supports updating imagery of "
"existing datasets, creating new datasets through the CreateCopy() and "
"Create() interfaces."
msgstr ""

#: ../../../source/drivers/raster/isis3.rst:160
msgid ""
"When using CreateCopy(), gdal_translate or gdalwarp, an effort is made to "
"preserve as much as possible of the original label when doing ISIS3 to ISIS3 "
"conversions. This can be disabled with the USE_SRC_LABEL=NO creation option."
msgstr ""

#: ../../../source/drivers/raster/isis3.rst:165
msgid "|about-creation-options| The available creation options are:"
msgstr ""

#: ../../../source/drivers/raster/isis3.rst:309
msgid "Examples"
msgstr ""

#: ../../../source/drivers/raster/isis3.rst:311
msgid ""
"How to create a copy of a source ISIS3 dataset to another ISIS3 dataset "
"while modifying a parameter of IsisCube.Mapping group, by using GDAL Python :"
msgstr ""

#: ../../../source/drivers/raster/isis3.rst:317
msgid ""
"import json\n"
"from osgeo import gdal\n"
"\n"
"src_ds = gdal.Open('in.lbl')\n"
"# Load source label as JSON\n"
"label = json.loads( src_ds.GetMetadata_List('json:ISIS3')[0] )\n"
"# Update parameter\n"
"label[\"IsisCube\"][\"Mapping\"][\"TargetName\"] = \"Moon\"\n"
"\n"
"# Instantiate new raster\n"
"# Note the USE_SRC_MAPPING=YES creation option, since we modified the\n"
"# IsisCube.Mapping section, which otherwise is completely rewritten from\n"
"# the geotransform and projection attached to the output dataset.\n"
"out_ds = gdal.GetDriverByName('ISIS3').Create('out.lbl',\n"
"                                              src_ds.RasterXSize,\n"
"                                              src_ds.RasterYSize,\n"
"                                              src_ds.RasterCount,\n"
"                                              src_ds.GetRasterBand(1)."
"DataType,\n"
"                                              options = "
"['USE_SRC_MAPPING=YES'])\n"
"# Attach the modified label\n"
"out_ds.SetMetadata( [json.dumps(label)], 'json:ISIS3' )\n"
"\n"
"# Copy imagery (assumes that each band fits into memory, otherwise a line-"
"by\n"
"# line or block-per-block strategy would be more appropriate )\n"
"for i in range(src_ds.RasterCount):\n"
"    out_ds.GetRasterBand(1).WriteRaster( 0, 0,\n"
"                                        src_ds.RasterXSize,\n"
"                                        src_ds.RasterYSize,\n"
"                                        src_ds.GetRasterBand(1)."
"ReadRaster() )\n"
"out_ds = None\n"
"src_ds = None"
msgstr ""

#: ../../../source/drivers/raster/isis3.rst:350
msgid "See Also"
msgstr ""

#: ../../../source/drivers/raster/isis3.rst:352
msgid "Implemented as :source_file:`frmts/pds/isis3dataset.cpp`."
msgstr ""

#: ../../../source/drivers/raster/isis3.rst:353
msgid ":ref:`GDAL PDS Driver <raster.pds>`"
msgstr ""

#: ../../../source/drivers/raster/isis3.rst:354
msgid ":ref:`GDAL ISIS2 Driver <raster.isis2>`"
msgstr ""
